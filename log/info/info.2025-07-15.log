2025-07-15 10:36:52.435 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 30172 (F:\TMSmanager\backend\target\classes started by 江西杰联医疗设备有限公司 in F:\TMSmanager\backend)
2025-07-15 10:36:52.437 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-15 10:36:53.212 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-15 10:36:53.214 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-15 10:36:53.252 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
2025-07-15 10:36:53.433 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-15 10:36:53.443 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-15 10:36:53.480 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$1354c107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:53.561 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:53.621 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$eda40cab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:53.626 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:53.628 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:53.634 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$84159bda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:53.645 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$ef959d83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:53.900 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$e85a54d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:53.945 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:53.946 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.005 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.009 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$d59cf7e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.012 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.015 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$c1de0874] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.020 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.021 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.023 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-15 10:36:54.029 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-15 10:36:54.449 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-15 10:36:54.449 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-15 10:36:54.449 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-15 10:36:54.449 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-15 10:36:54.449 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.456 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.461 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.876 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.880 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.881 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.883 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.895 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.896 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.900 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.901 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.901 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.925 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.937 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.953 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.953 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.955 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.968 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.969 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.983 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.984 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:54.986 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.001 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.002 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy126] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.002 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.011 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.024 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$dfa91b6b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.027 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$91f5dd84] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.029 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$4d0cc373] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.034 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.036 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.039 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$73d83aa1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.043 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.044 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$c1b4b8fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.051 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.053 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.056 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.058 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.071 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.078 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.081 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.082 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.087 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.096 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.103 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$ef075709] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.112 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:36:55.349 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-15 10:36:55.357 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-15 10:36:55.360 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-15 10:36:55.360 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-15 10:36:55.364 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-15 10:36:55.664 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-15 10:36:55.664 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3204 ms
2025-07-15 10:36:56.020 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-15 10:36:56.020 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-15 10:36:56.020 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-15 10:36:56.020 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-15 10:36:56.020 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-15 10:36:56.020 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-15 10:36:56.020 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-15 10:36:56.020 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-15 10:36:56.725 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-15 10:36:57.542 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-15 10:36:57.550 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-15 10:36:57.550 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-15 10:36:57.550 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-15 10:36:57.551 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-15 10:36:57.551 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-15 10:36:57.551 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-15 10:36:57.551 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@1f547af8
2025-07-15 10:36:57.566 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-15 10:36:57.604 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-15 10:36:57.761 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-15 10:36:57.761 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-15 10:36:57.761 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-15 10:36:57.761 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-15 10:36:57.761 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-15 10:36:57.761 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-15 10:36:57.761 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-15 10:36:57.761 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-15 10:36:57.761 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-15 10:36:58.626 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-15 10:36:58.626 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-15 10:36:58.627 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-15 10:36:58.649 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-15 10:36:58.662 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-15 10:36:58.674 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-15 10:36:58.676 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.626 seconds (JVM running for 12.198)
2025-07-15 10:36:58.682 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-15 10:36:58.696 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 2 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 10:36:58.711 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-15 10:36:58.712 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-15 10:36:58.717 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-15 10:36:58.720 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 1 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 10:36:58.727 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 7 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 10:36:58.767 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2025-07-15 10:36:58.777 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2025-07-15 10:36:58.787 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-15 10:36:58.791 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 10:36:58.793 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2025-07-15 10:36:58.793 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 10:36:58.795 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2025-07-15 10:36:58.796 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 10:36:58.798 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-15 10:36:58.798 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-15 10:36:58.800 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 10:36:58.801 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2025-07-15 10:36:58.803 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2025-07-15 10:36:58.805 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2025-07-15 10:36:58.807 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 10:36:58.808 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2025-07-15 10:36:58.810 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2025-07-15 10:36:58.810 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2025-07-15 10:36:58.812 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 10:36:58.813 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-15 10:36:58.814 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-15 10:36:58.815 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2025-07-15 10:36:58.817 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '1111' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 10:36:58.818 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '1111';
2025-07-15 10:36:58.819 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '1111' and m.perms is not null and m.perms <> '';
2025-07-15 10:36:58.820 febs [main] INFO  p6spy - 2025-07-15 10:36:58 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2025-07-15 10:36:58.821 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-15 10:36:58.821 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-15 10:36:58.821 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-15 10:36:58.821 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-15 10:36:58.821 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-15T10:36:58.821
2025-07-15 10:36:59.182 febs [RMI TCP Connection(1)-192.168.10.15] INFO  p6spy - 2025-07-15 10:36:59 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-15 10:36:59.232 febs [RMI TCP Connection(3)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-15 10:36:59.232 febs [RMI TCP Connection(3)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-15 10:36:59.240 febs [RMI TCP Connection(3)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2025-07-15 10:37:53.134 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:37:53 | 耗时 11 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 10:37:53.138 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:37:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 10:37:53.140 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:37:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 10:37:53.143 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:37:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 10:37:53.152 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:37:53 | 耗时 3 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 10:37:53.154 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:37:53 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 10:37:53.156 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:37:53 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 10:37:53.157 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:37:53 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 10:37:53.163 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:37:53 | 耗时 4 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:37:53.165 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:37:53 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:37:53.172 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:37:53 | 耗时 1 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 10:38:01.225 febs [http-nio-9527-exec-8] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 10:38:01.392 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-15 10:38:01.430 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 10:38:01.446 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.DELETE_MARK = 0 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2025-07-15 10:38:01.585 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 10:38:01.586 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 10:38:01.588 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 10:38:01.590 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 10:38:01.591 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 10:38:01.593 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 10:38:01.594 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 10:38:01.594 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:38:01.595 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 10:38:01.596 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:38:01.596 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 10:38:01.597 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 10:38:01.598 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 10:38:01.599 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:38:01.599 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 10:38:01.600 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:38:01.602 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:01 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 10:38:07.172 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 10:38:07 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 10:38:07.176 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 10:38:07 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 10:38:13.106 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 10:38:13.107 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 4 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 10:38:13.109 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 10:38:13.110 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 10:38:13.111 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 10:38:13.111 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:38:13.112 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:38:13.113 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 10:38:13.114 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 10:38:13.114 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 10:38:13.117 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 10:38:13.117 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 1 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 10:38:13.118 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 10:38:13.120 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 10:38:13.124 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:38:13.126 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:38:13.128 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:38:13 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 10:41:29.883 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 10:41:29.884 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 10:41:29.885 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 10:41:29.886 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 10:41:29.887 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:41:29.887 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 10:41:29.888 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:41:29.888 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 10:41:29.889 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 10:41:29.889 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 10:41:29.890 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 10:41:29.890 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 10:41:29.891 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 10:41:29.892 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 10:41:29.893 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:41:29.895 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:41:29.898 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:41:29 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 10:41:58.661 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:41:58 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 10:41:58.663 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:41:58 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 10:42:01.280 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 10:42:01.281 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 10:42:01.282 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 10:42:01.283 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 10:42:01.284 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 10:42:01.285 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:42:01.286 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 10:42:01.286 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:42:01.287 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 10:42:01.287 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 10:42:01.288 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 10:42:01.288 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 10:42:01.290 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 10:42:01.292 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 10:42:01.293 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:42:01.295 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:42:01.296 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:42:01 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 10:42:06.061 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 10:42:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 10:42:06.062 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 10:42:06 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 10:42:07.792 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 10:42:07.792 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 10:42:07.794 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 10:42:07.795 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 10:42:07.795 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 10:42:07.795 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:42:07.796 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 10:42:07.796 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:42:07.797 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 10:42:07.797 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 10:42:07.798 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 10:42:07.798 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 10:42:07.798 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 10:42:07.799 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 10:42:07.800 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:42:07.801 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:42:07.803 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:42:07 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 10:42:09.859 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:42:09 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 10:42:09.860 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:42:09 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 10:42:33.879 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 10:42:33.880 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 10:42:33.883 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 10:42:33.884 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 10:42:33.885 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 10:42:33.886 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:42:33.886 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 10:42:33.886 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:42:33.887 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 10:42:33.887 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 10:42:33.888 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 10:42:33.889 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 10:42:33.889 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 10:42:33.890 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 10:42:33.892 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:42:33.893 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:42:33.894 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 10:42:33 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 10:42:48.655 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:42:48 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 10:42:48.656 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:42:48 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 10:43:03.860 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:43:03 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 10:43:03.861 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:43:03 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 10:43:25.906 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 10:43:25.906 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 10:43:25.907 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 10:43:25.909 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 10:43:25.910 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 10:43:25.911 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 10:43:25.911 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:43:25.912 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:43:25.912 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 10:43:25.912 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 10:43:25.913 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 10:43:25.913 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 10:43:25.913 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 10:43:25.914 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 10:43:25.915 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:43:25.916 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:43:25.917 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 10:43:25 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 10:46:58.649 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:46:58 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 10:46:58.651 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:46:58 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 10:48:08.496 febs [Thread-20] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-15 10:48:13.893 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 21896 (F:\TMSmanager\backend\target\classes started by 江西杰联医疗设备有限公司 in F:\TMSmanager\backend)
2025-07-15 10:48:13.894 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-15 10:48:14.527 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-15 10:48:14.528 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-15 10:48:14.555 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 0 repository interfaces.
2025-07-15 10:48:14.740 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-15 10:48:14.749 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-15 10:48:14.790 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$38ea6382] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:14.876 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:14.984 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1339af26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:14.989 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:14.991 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:14.998 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a9ab3e55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.008 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$152b3ffe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.056 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$deff752] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.068 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.070 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.150 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$fb329a64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.152 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.156 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e773aaef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.162 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.163 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.165 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-15 10:48:15.171 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-15 10:48:15.406 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-15 10:48:15.406 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-15 10:48:15.406 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-15 10:48:15.406 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-15 10:48:15.406 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.415 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.420 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.918 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.922 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.923 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.925 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.937 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.938 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.942 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.943 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.943 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.968 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:15.990 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.006 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.007 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.008 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.022 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.023 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.042 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.043 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.046 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.063 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.064 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy126] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.065 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.076 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.092 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$53ebde6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.095 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$b78b7fff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.097 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$72a265ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.101 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.103 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.108 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$996ddd1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.113 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.115 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$e74a5b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.125 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.127 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.130 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.132 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.147 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.155 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.158 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.158 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.163 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.173 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.181 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$149cf984] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.190 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 10:48:16.490 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-15 10:48:16.499 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-15 10:48:16.503 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-15 10:48:16.503 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-15 10:48:16.507 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-15 10:48:16.611 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-15 10:48:16.612 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2691 ms
2025-07-15 10:48:17.031 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-15 10:48:17.031 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-15 10:48:17.031 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-15 10:48:17.031 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-15 10:48:17.031 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-15 10:48:17.031 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-15 10:48:17.031 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-15 10:48:17.032 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-15 10:48:17.786 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-15 10:48:18.741 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-15 10:48:18.749 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-15 10:48:18.749 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-15 10:48:18.749 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-15 10:48:18.749 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-15 10:48:18.749 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-15 10:48:18.750 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-15 10:48:18.750 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@37d81587
2025-07-15 10:48:18.768 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-15 10:48:18.810 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-15 10:48:19.007 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-15 10:48:19.007 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-15 10:48:19.007 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-15 10:48:19.007 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-15 10:48:19.007 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-15 10:48:19.007 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-15 10:48:19.007 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-15 10:48:19.007 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-15 10:48:19.007 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-15 10:48:20.233 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-15 10:48:20.233 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-15 10:48:20.233 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-15 10:48:20.265 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-15 10:48:20.278 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-15 10:48:20.289 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-15 10:48:20.291 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.715 seconds (JVM running for 8.101)
2025-07-15 10:48:20.298 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-15 10:48:20.306 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-15 10:48:20.307 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-15 10:48:20.324 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-15 10:48:20.324 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 10:48:20.336 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 10:48:20.336 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 10:48:20.346 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 10:48:20.351 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 10:48:20.379 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2025-07-15 10:48:20.388 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2025-07-15 10:48:20.398 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-15 10:48:20.401 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 10:48:20.403 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2025-07-15 10:48:20.405 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2025-07-15 10:48:20.407 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-15 10:48:20.410 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 10:48:20.411 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2025-07-15 10:48:20.413 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2025-07-15 10:48:20.415 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2025-07-15 10:48:20.416 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 10:48:20.419 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2025-07-15 10:48:20.420 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2025-07-15 10:48:20.421 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2025-07-15 10:48:20.423 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 10:48:20.423 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-15 10:48:20.424 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-15 10:48:20.425 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-15 10:48:20.426 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2025-07-15 10:48:20.427 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '1111' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 10:48:20.429 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '1111';
2025-07-15 10:48:20.430 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '1111' and m.perms is not null and m.perms <> '';
2025-07-15 10:48:20.431 febs [main] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2025-07-15 10:48:20.431 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-15 10:48:20.431 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-15 10:48:20.431 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-15 10:48:20.431 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-15 10:48:20.431 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-15T10:48:20.431
2025-07-15 10:48:20.844 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-15 10:48:20.844 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-15 10:48:20.861 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2025-07-15 10:48:20.877 febs [RMI TCP Connection(1)-192.168.10.15] INFO  p6spy - 2025-07-15 10:48:20 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-15 10:48:26.277 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 10:48:26.282 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 10:48:26.285 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 10:48:26.289 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 10:48:26.297 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 10:48:26.299 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 10:48:26.300 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 10:48:26.302 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 10:48:26.306 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:48:26.308 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 10:48:26.311 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:48:26.319 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 10:48:26.416 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 10:48:26.418 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:48:26.420 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:48:26.423 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 10:48:26.426 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:48:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 10:49:21.021 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 10:49:21.022 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 10:49:21.024 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 10:49:21.026 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 10:49:21.026 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 10:49:21.027 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:49:21.027 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 10:49:21.028 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:49:21.028 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 10:49:21.029 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 10:49:21.030 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 10:49:21.030 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 10:49:21.031 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 10:49:21.032 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 10:49:21.033 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:49:21.036 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:49:21.038 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:49:21 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 10:49:41.498 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 10:49:41.565 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 10:49:41 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-15 10:49:41.577 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 10:49:41.586 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 10:49:41 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.DELETE_MARK = 0 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2025-07-15 10:50:35.962 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 10:50:35.963 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 10:50:35.965 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 10:50:35.966 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 10:50:35.967 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 10:50:35.968 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:50:35.968 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 10:50:35.969 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 10:50:35.970 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 10:50:35.970 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 10:50:35.972 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 10:50:35.972 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 10:50:35.974 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 10:50:35.975 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 10:50:35.977 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:50:35.980 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 10:50:35.983 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:50:35 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 10:50:40.596 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:50:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 10:50:40.600 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:50:40 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 10:50:42.312 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 10:50:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 10:50:42.313 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 10:50:42 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 10:50:45.574 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 10:50:45 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient WHERE id=1 ;
2025-07-15 10:51:03.596 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:51:03 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 10:51:03.597 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 10:51:03 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 10:52:48.082 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:52:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 10:52:48.083 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 10:52:48 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 10:53:06.601 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:53:06 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 10:53:06.602 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 10:53:06 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 10:53:20.275 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:53:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 10:53:20.277 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:53:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 10:54:10.268 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:54:10 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 10:54:10.269 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:54:10 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 10:58:20.270 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:58:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 10:58:20.272 febs [scheduling-1] INFO  p6spy - 2025-07-15 10:58:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 11:00:00.266 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:00:00 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 11:00:00.268 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:00:00 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 11:03:20.266 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:03:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 11:03:20.268 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:03:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 11:05:50.272 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:05:50 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 11:05:50.275 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:05:50 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 11:07:41.855 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 11:07:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:07:41.856 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 11:07:41 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:08:11.856 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:08:11 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:08:11.858 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:08:11 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:08:20.266 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:08:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 11:08:20.269 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:08:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 11:09:40.162 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 11:09:40.163 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 11:09:40.164 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 11:09:40.166 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 11:09:40.166 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 11:09:40.167 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 11:09:40.167 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 11:09:40.168 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 11:09:40.168 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 11:09:40.170 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 11:09:40.170 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 11:09:40.171 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 11:09:40.171 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 11:09:40.172 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 11:09:40.173 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 11:09:40.175 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 11:09:40.176 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:09:40 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 11:09:45.340 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 11:09:45 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 11:09:45.341 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 11:09:45 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 11:09:47.060 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 11:09:47 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:09:47.061 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 11:09:47 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:11:40.269 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:11:40 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 11:11:40.271 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:11:40 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 11:13:20.269 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:13:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 11:13:20.271 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:13:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 11:14:11.167 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-15 11:14:13.383 febs [Thread-19] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - stopped toiletMqttInbound
2025-07-15 11:14:13.384 febs [Thread-19] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-15 11:14:13.384 febs [Thread-19] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 0 subscriber(s).
2025-07-15 11:14:13.384 febs [Thread-19] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped _org.springframework.integration.errorLogger
2025-07-15 11:14:13.384 febs [Thread-19] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-15 11:14:13.384 febs [Thread-19] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 0 subscriber(s).
2025-07-15 11:14:13.384 febs [Thread-19] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-15 11:14:13.384 febs [Thread-19] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-15 11:14:13.384 febs [Thread-19] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 0 subscriber(s).
2025-07-15 11:14:13.384 febs [Thread-19] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-15 11:14:13.385 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2025-07-15 11:14:13.385 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2025-07-15 11:14:13.385 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-07-15 11:14:13.386 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-15 11:14:13.386 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-07-15 11:14:13.391 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2025-07-15 11:14:13.394 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2025-07-15 11:14:13.394 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2025-07-15 11:14:13.403 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2025-07-15 11:17:26.350 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 34520 (F:\TMSmanager\backend\target\classes started by 江西杰联医疗设备有限公司 in F:\TMSmanager\backend)
2025-07-15 11:17:26.352 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-15 11:17:26.984 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-15 11:17:26.985 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-15 11:17:27.013 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 0 repository interfaces.
2025-07-15 11:17:27.178 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-15 11:17:27.185 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-15 11:17:27.226 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$a81122ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.301 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.356 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$82606e72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.364 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$18d1fda1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.381 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$8451ff4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.438 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$7d16b69e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.487 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.489 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.540 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.544 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$6a5959b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.546 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.549 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$569a6a3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.555 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.555 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.557 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-15 11:17:27.561 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-15 11:17:27.739 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-15 11:17:27.739 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-15 11:17:27.739 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-15 11:17:27.739 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-15 11:17:27.740 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.747 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:27.751 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.142 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.146 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.147 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.148 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.164 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.165 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.169 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.170 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.171 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.196 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.210 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.227 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.228 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.230 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.246 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.247 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.266 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.267 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.270 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.287 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.288 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy127] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.300 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.323 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$74657d32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.326 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$26b23f4b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.328 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$e1c9253a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.332 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.337 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$8949c68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.342 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$56711ac1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.349 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.350 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.352 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.354 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.366 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.372 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.375 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.375 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.380 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.388 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.394 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$83c3b8d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.402 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 11:17:28.622 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-15 11:17:28.630 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-15 11:17:28.633 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-15 11:17:28.633 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-15 11:17:28.637 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-15 11:17:28.726 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-15 11:17:28.726 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2330 ms
2025-07-15 11:17:29.099 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-15 11:17:29.099 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-15 11:17:29.099 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-15 11:17:29.099 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-15 11:17:29.099 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-15 11:17:29.099 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-15 11:17:29.099 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-15 11:17:29.099 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-15 11:17:29.806 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-15 11:17:30.691 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-15 11:17:30.697 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-15 11:17:30.697 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-15 11:17:30.698 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-15 11:17:30.698 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-15 11:17:30.698 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-15 11:17:30.698 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-15 11:17:30.698 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@6aadb092
2025-07-15 11:17:30.713 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-15 11:17:30.746 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-15 11:17:30.922 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-15 11:17:30.922 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-15 11:17:30.922 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-15 11:17:30.922 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-15 11:17:30.922 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-15 11:17:30.923 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-15 11:17:30.923 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-15 11:17:30.923 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-15 11:17:30.923 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-15 11:17:31.739 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-15 11:17:31.739 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-15 11:17:31.739 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-15 11:17:31.761 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-15 11:17:31.768 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-15 11:17:31.779 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-15 11:17:31.780 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 5.727 seconds (JVM running for 6.246)
2025-07-15 11:17:31.787 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-15 11:17:31.795 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-15 11:17:31.795 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-15 11:17:31.814 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 9 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-15 11:17:31.814 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 9 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 11:17:31.827 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 11:17:31.838 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 11:17:31.872 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2025-07-15 11:17:31.881 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2025-07-15 11:17:31.891 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-15 11:17:31.893 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 11:17:31.895 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2025-07-15 11:17:31.897 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2025-07-15 11:17:31.899 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 11:17:31.899 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-15 11:17:31.901 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 11:17:31.902 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 11:17:31.903 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2025-07-15 11:17:31.904 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-15 11:17:31.905 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2025-07-15 11:17:31.907 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2025-07-15 11:17:31.908 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 11:17:31.910 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2025-07-15 11:17:31.911 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2025-07-15 11:17:31.912 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2025-07-15 11:17:31.914 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 11:17:31.915 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-15 11:17:31.916 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-15 11:17:31.917 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2025-07-15 11:17:31.919 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '1111' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 11:17:31.920 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '1111';
2025-07-15 11:17:31.921 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '1111' and m.perms is not null and m.perms <> '';
2025-07-15 11:17:31.922 febs [main] INFO  p6spy - 2025-07-15 11:17:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2025-07-15 11:17:31.923 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-15 11:17:31.923 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-15 11:17:31.923 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-15 11:17:31.923 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-15 11:17:31.923 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-15T11:17:31.923
2025-07-15 11:17:32.326 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-15 11:17:32.326 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-15 11:17:32.342 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2025-07-15 11:17:32.424 febs [RMI TCP Connection(3)-192.168.10.15] INFO  p6spy - 2025-07-15 11:17:32 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-15 11:17:36.239 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 11:17:36 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 11:17:36.242 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 11:17:36 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 11:17:38.347 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 11:17:38 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:17:38.347 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 11:17:38 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:17:46.486 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:17:46 | 耗时 5 ms | SQL 语句：
INSERT INTO patient ( id, hospital_id, department_id, name, gender, birthday, code ) VALUES ( 1944959547897483266, 1, 1, '王五', 'M', '2025-07-09T00:00:00.000+0800', '1232434' );
2025-07-15 11:17:46.504 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:17:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:17:46.505 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:17:46 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:18:22.385 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 11:18:22 | 耗时 0 ms | SQL 语句：
UPDATE patient SET hospital_id=1, department_id=1, name='王五', gender='F', birthday='2025-07-06T00:00:00.000+0800', code='1232434' WHERE id=1944959547897483300;
2025-07-15 11:18:22.412 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:18:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:18:22.413 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:18:22 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:22:31.770 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:22:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 11:22:31.772 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:22:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 11:23:21.769 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:23:21 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 11:23:21.771 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:23:21 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 11:25:18.039 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 11:25:18 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:25:18.040 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 11:25:18 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:25:31.827 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:25:31 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient WHERE id=1944959547897483300 ;
2025-07-15 11:25:38.740 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 11:25:38 | 耗时 0 ms | SQL 语句：
DELETE FROM patient WHERE id=1944959547897483300;
2025-07-15 11:25:38.755 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 11:25:38 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:25:38.756 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 11:25:38 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:25:45.112 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 11:25:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:25:45.113 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 11:25:45 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:25:52.486 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 11:25:52 | 耗时 0 ms | SQL 语句：
DELETE FROM patient WHERE id=1944959547897483300;
2025-07-15 11:25:52.505 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:25:52 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:25:52.506 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:25:52 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:26:03.315 febs [http-nio-9527-exec-10] INFO  o.a.coyote.http11.Http11Processor - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:467)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:294)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-07-15 11:26:04.285 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 11:26:04 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:26:04.286 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 11:26:04 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:27:31.769 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:27:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 11:27:31.771 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:27:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 11:29:11.775 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:29:11 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 11:29:11.777 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:29:11 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 11:29:53.190 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 11:29:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:29:53.190 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 11:29:53 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:31:00.203 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:31:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:31:00.204 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:31:00 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:31:42.049 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 11:31:42 | 耗时 0 ms | SQL 语句：
DELETE FROM patient WHERE id=1944959547897483300;
2025-07-15 11:31:42.069 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 11:31:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:31:42.069 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 11:31:42 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:32:31.762 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:32:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 11:32:31.764 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:32:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 11:32:43.501 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 11:32:43 | 耗时 0 ms | SQL 语句：
DELETE FROM patient WHERE id=1944959547897483300;
2025-07-15 11:35:01.771 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:35:01 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 11:35:01.775 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:35:01 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 11:35:16.061 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 11:35:16.063 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 11:35:16.065 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 11:35:16.067 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 11:35:16.073 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 11:35:16.075 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 11:35:16.077 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 11:35:16.078 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 11:35:16.081 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 11:35:16.084 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 11:35:16.087 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 11:35:16.092 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 2 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 11:35:16.165 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 11:35:16.168 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 11:35:16.171 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 11:35:16.174 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 11:35:16.177 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:35:16 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 11:35:19.463 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 11:35:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:35:19.464 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 11:35:19 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:35:46.449 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:35:46 | 耗时 7 ms | SQL 语句：
INSERT INTO patient ( id, hospital_id, department_id, name, gender, birthday, code ) VALUES ( 1944964077552865281, 1, 1, '王五', 'F', '2025-07-06T00:00:00.000+0800', '12324348' );
2025-07-15 11:35:46.471 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 11:35:46 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:35:46.472 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 11:35:46 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:36:01.200 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:36:01 | 耗时 0 ms | SQL 语句：
DELETE FROM patient WHERE id=1944959547897483300;
2025-07-15 11:36:01.219 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:36:01 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:36:01.220 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:36:01 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:36:13.015 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 11:36:13 | 耗时 0 ms | SQL 语句：
DELETE FROM patient WHERE id=1944964077552865300;
2025-07-15 11:36:13.043 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:36:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:36:13.044 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:36:13 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:37:31.768 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:37:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 11:37:31.771 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:37:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 11:40:51.766 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:40:51 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 11:40:51.768 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:40:51 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 11:42:31.764 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:42:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 11:42:31.766 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:42:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 11:42:58.630 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:42:58 | 耗时 349 ms | SQL 语句：
DELETE FROM patient WHERE id=1;
2025-07-15 11:42:58.649 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:42:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:42:58.650 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:42:58 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:43:06.136 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 11:43:06 | 耗时 0 ms | SQL 语句：
DELETE FROM patient WHERE id=1944959547897483300;
2025-07-15 11:43:06.164 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:43:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:43:06.165 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:43:06 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:43:10.439 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 11:43:10 | 耗时 0 ms | SQL 语句：
DELETE FROM patient WHERE id=1944964077552865300;
2025-07-15 11:43:10.463 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 11:43:10 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:43:10.464 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 11:43:10 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:43:14.184 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:43:14 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:43:14.186 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:43:14 | 耗时 1 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:43:16.601 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 11:43:16 | 耗时 9 ms | SQL 语句：
DELETE FROM patient WHERE id=1944959547897483300;
2025-07-15 11:43:16.618 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 11:43:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:43:16.620 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 11:43:16 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:43:20.224 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 11:43:20 | 耗时 0 ms | SQL 语句：
DELETE FROM patient WHERE id=1944964077552865300;
2025-07-15 11:43:20.249 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 11:43:20 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:43:20.250 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 11:43:20 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:46:41.767 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:46:41 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 11:46:41.769 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:46:41 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 11:47:31.775 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:47:31 | 耗时 9 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 11:47:31.778 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:47:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 11:47:45.394 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:47:45 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:47:56.159 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 11:47:56 | 耗时 4 ms | SQL 语句：
INSERT INTO patient ( id, hospital_id, department_id, name, gender, birthday, code ) VALUES ( 1944967138186825730, 1, 1, '王五', 'M', '2025-07-15T00:00:00.000+0800', '1232434' );
2025-07-15 11:47:56.176 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 11:47:56 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:47:56.177 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 11:47:56 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:48:12.693 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 11:48:12 | 耗时 4 ms | SQL 语句：
INSERT INTO patient ( id, hospital_id, department_id, name, gender, birthday, code ) VALUES ( 1944967207560613890, 1, 1, '里斯', 'F', '2025-07-06T00:00:00.000+0800', '12324341' );
2025-07-15 11:48:12.714 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 11:48:12 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:48:12.716 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 11:48:12 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:51:04.751 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:51:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:51:04.753 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 11:51:04 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:51:11.562 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 11:51:11.671 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-15 11:51:11.685 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 11:51:11.699 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.DELETE_MARK = 0 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2025-07-15 11:51:11.860 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 11:51:11.863 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 11:51:11.864 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 11:51:11.865 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 11:51:11.868 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 11:51:11.869 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 11:51:11.870 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 11:51:11.871 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 11:51:11.871 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 11:51:11.873 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 11:51:11.873 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 11:51:11.875 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 11:51:11.875 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 11:51:11.878 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 11:51:11.879 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 11:51:11.882 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 11:51:11.885 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 11:51:11 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 11:51:14.783 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 11:51:14 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:51:14.784 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 11:51:14 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:52:31.765 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:52:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 11:52:31.767 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:52:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 11:52:31.790 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:52:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 11:52:31.792 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:52:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 11:55:18.933 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 11:55:18 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:55:18.935 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 11:55:18 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:57:31.771 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:57:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 11:57:31.778 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:57:31 | 耗时 5 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 11:58:21.776 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:58:21 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 11:58:21.778 febs [scheduling-1] INFO  p6spy - 2025-07-15 11:58:21 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 11:58:33.875 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:58:33 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:58:33.878 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 11:58:33 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 11:59:53.053 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 11:59:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 11:59:53.055 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 11:59:53 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 12:02:31.773 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:02:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 12:02:31.776 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:02:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 12:04:11.770 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:04:11 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 12:04:11.772 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:04:11 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 12:07:31.778 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:07:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 12:07:31.780 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:07:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 12:10:01.770 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:10:01 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 12:10:01.773 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:10:01 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 12:12:31.777 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:12:31 | 耗时 8 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 12:12:31.780 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:12:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 12:15:51.784 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:15:51 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 12:15:51.786 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:15:51 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 12:17:31.784 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:17:31 | 耗时 9 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 12:17:31.786 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:17:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 12:17:31.804 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-15 12:21:41.780 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:21:41 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 12:21:41.782 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:21:41 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 12:22:31.770 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:22:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 12:22:31.773 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:22:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 12:27:31.776 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:27:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 12:27:31.778 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:27:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 12:27:31.797 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:27:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 12:27:31.799 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:27:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 12:32:31.782 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:32:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 12:32:31.784 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:32:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 12:33:21.775 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:33:21 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 12:33:21.784 febs [scheduling-1] INFO  p6spy - 2025-07-15 12:33:21 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:28:44.193 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 13:28:44 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 13:28:44.194 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 13:28:44 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 13:28:48.211 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 13:28:51.343 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-15 13:28:51.353 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 13:28:51.356 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.DELETE_MARK = 0 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2025-07-15 13:28:51.481 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 13:28:51.482 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 13:28:51.485 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 13:28:51.488 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 13:28:51.488 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 13:28:51.490 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 13:28:51.490 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 13:28:51.491 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 13:28:51.492 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 13:28:51.492 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 13:28:51.493 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 13:28:51.494 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 13:28:51.495 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 13:28:51.496 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 13:28:51.498 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 13:28:51.500 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 13:28:51.502 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 13:28:51 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 13:29:21.618 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 13:29:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 13:29:21.619 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 13:29:21 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 13:29:23.307 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 13:29:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 13:29:23.308 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 13:29:23 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 13:29:24.854 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 13:29:24 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 13:29:24.855 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 13:29:24 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 13:29:26.291 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 13:29:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 13:29:26.291 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 13:29:26 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 13:29:27.974 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 13:29:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 13:29:27.974 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 13:29:27 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 13:29:29.001 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 13:29:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 13:29:29.002 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 13:29:29 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 13:30:20.284 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 9 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:30:20.286 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:30:20.309 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 13:30:20.311 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:30:20.312 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:30:20.313 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:30:20.331 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 13:30:20.333 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:30:20.334 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:30:20.335 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:30:20.352 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 13:30:20.353 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:30:20.354 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:30:20.356 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:30:20.371 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 13:30:20.373 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:30:20.374 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:30:20.376 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:30:20.387 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:30:20.388 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:30:20.404 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 13:30:20.405 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:30:20.407 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:30:20.408 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:30:20.424 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 13:30:20.425 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:30:20.426 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:30:20.427 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:30:20.444 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 13:30:20.446 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:30:20.447 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:30:20.448 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:30:20.460 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-15 13:30:20.461 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 13:30:20.462 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:30:20.463 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:30:20.465 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:30:20.477 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 13:30:20.478 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:30:20.497 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:30:20.498 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:30:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:31:41.599 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:31:41 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 13:31:41.604 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:31:41 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:32:31.584 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:32:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:32:31.594 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:32:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:34:06.018 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 13:34:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 13:34:06.019 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 13:34:06 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 13:34:07.304 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 13:34:07 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 13:34:07.305 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 13:34:07 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 13:34:08.524 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 13:34:08 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 13:34:08.530 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 13:34:08 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 13:34:09.413 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 13:34:09.415 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 13:34:09.416 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 13:34:09.417 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 13:34:09.418 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 13:34:09.418 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 13:34:09.419 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 13:34:09.419 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 13:34:09.420 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 13:34:09.420 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 13:34:09.421 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 13:34:09.421 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 13:34:09.422 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 13:34:09.422 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 13:34:09.424 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 13:34:09.425 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 13:34:09.427 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 13:34:09 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 13:34:26.905 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 13:34:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 13:34:26.906 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 13:34:26 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 13:37:31.582 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:37:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:37:31.584 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:37:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:37:31.603 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:37:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 13:37:31.604 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:37:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:42:31.593 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:42:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:42:31.595 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:42:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:43:21.594 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:43:21 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 13:43:21.596 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:43:21 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:47:31.594 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:47:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:47:31.605 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:47:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:49:11.596 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:49:11 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 13:49:11.598 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:49:11 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:52:31.597 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:52:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:52:31.599 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:52:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 13:55:01.592 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:55:01 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 13:55:01.593 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:55:01 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 13:57:31.598 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:57:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 13:57:31.600 febs [scheduling-1] INFO  p6spy - 2025-07-15 13:57:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 14:00:51.585 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:00:51 | 耗时 2 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 14:00:51.587 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:00:51 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 14:02:31.595 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:02:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 14:02:31.597 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:02:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 14:06:41.595 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:06:41 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 14:06:41.605 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:06:41 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 14:07:31.590 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:07:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 14:07:31.600 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:07:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 14:12:31.596 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:12:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 14:12:31.606 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:12:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 14:12:31.624 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:12:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 14:12:31.625 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:12:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 14:17:31.595 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:17:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 14:17:31.597 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:17:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 14:17:31.613 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-15 14:18:21.599 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:18:21 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 14:18:21.601 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:18:21 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 14:22:31.586 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:22:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 14:22:31.587 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:22:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 14:24:11.603 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:24:11 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 14:24:11.604 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:24:11 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 14:27:31.605 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:27:31 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 14:27:31.607 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:27:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 14:29:15.804 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 14:29:15 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 14:29:15.806 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 14:29:15 | 耗时 1 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 14:29:19.291 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 14:29:19.348 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-15 14:29:19.362 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 14:29:19.367 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.DELETE_MARK = 0 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2025-07-15 14:29:19.496 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 14:29:19.499 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 14:29:19.499 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 14:29:19.501 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 14:29:19.503 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 14:29:19.504 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 14:29:19.505 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 14:29:19.505 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 14:29:19.506 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 14:29:19.506 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 14:29:19.507 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 14:29:19.507 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 14:29:19.507 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 14:29:19.508 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 14:29:19.509 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 14:29:19.512 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 14:29:19.515 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 14:29:19 | 耗时 1 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 14:29:42.417 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 14:29:42 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 14:29:42.417 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 14:29:42 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 14:30:01.598 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:30:01 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 14:30:01.601 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:30:01 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 14:32:31.591 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:32:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 14:32:31.593 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:32:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 14:35:51.602 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:35:51 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 14:35:51.603 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:35:51 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 14:37:31.593 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:37:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 14:37:31.595 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:37:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 14:41:41.596 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:41:41 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 14:41:41.598 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:41:41 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 14:42:31.589 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:42:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 14:42:31.591 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:42:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 14:45:41.284 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 14:45:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 14:45:41.286 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 14:45:41 | 耗时 1 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 14:47:31.593 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:47:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 14:47:31.594 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:47:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 14:47:31.612 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:47:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 14:47:31.614 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:47:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 14:52:31.596 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:52:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 14:52:31.606 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:52:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 14:53:21.598 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:53:21 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 14:53:21.600 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:53:21 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 14:57:31.594 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:57:31 | 耗时 2 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 14:57:31.596 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:57:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 14:59:11.586 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:59:11 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 14:59:11.589 febs [scheduling-1] INFO  p6spy - 2025-07-15 14:59:11 | 耗时 1 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 15:02:31.601 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:02:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 15:02:31.603 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:02:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 15:05:01.605 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:05:01 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 15:05:01.606 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:05:01 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 15:07:31.584 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:07:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 15:07:31.586 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:07:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 15:10:51.582 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:10:51 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 15:10:51.583 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:10:51 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 15:12:31.584 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:12:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 15:12:31.586 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:12:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 15:16:41.592 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:16:41 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 15:16:41.593 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:16:41 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 15:17:31.599 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:17:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 15:17:31.601 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:17:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 15:17:31.615 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-15 15:22:31.600 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:22:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 15:22:31.602 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:22:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 15:22:31.615 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:22:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 15:22:31.617 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:22:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 15:27:31.603 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:27:31 | 耗时 8 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 15:27:31.605 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:27:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 15:28:21.596 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:28:21 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 15:28:21.597 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:28:21 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 15:32:31.593 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:32:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 15:32:31.603 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:32:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 15:34:11.581 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:34:11 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 15:34:11.583 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:34:11 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 15:37:31.594 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:37:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 15:37:31.595 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:37:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 15:40:01.589 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:40:01 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 15:40:01.590 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:40:01 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 15:42:31.587 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:42:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 15:42:31.589 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:42:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 15:45:51.588 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:45:51 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 15:45:51.590 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:45:51 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 15:47:31.587 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:47:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 15:47:31.588 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:47:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 15:51:41.601 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:51:41 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 15:51:41.603 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:51:41 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 15:52:31.603 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:52:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 15:52:31.605 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:52:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 15:57:31.595 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:57:31 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 15:57:31.597 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:57:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 15:57:31.616 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:57:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 15:57:31.617 febs [scheduling-1] INFO  p6spy - 2025-07-15 15:57:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 16:02:31.583 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:02:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 16:02:31.585 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:02:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 16:03:21.588 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:03:21 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 16:03:21.589 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:03:21 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 16:07:31.587 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:07:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 16:07:31.588 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:07:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 16:09:11.583 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:09:11 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 16:09:11.584 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:09:11 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 16:12:31.589 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:12:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 16:12:31.590 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:12:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 16:15:01.584 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:15:01 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 16:15:01.585 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:15:01 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 16:17:31.591 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:17:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 16:17:31.592 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:17:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 16:17:31.605 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-15 16:17:41.483 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:17:41 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 16:17:41.486 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:17:41 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 16:17:44.828 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:17:44.926 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 16:17:44 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-15 16:17:44.940 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 16:17:44.947 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 16:17:44 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.DELETE_MARK = 0 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2025-07-15 16:17:45.063 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 16:17:45.064 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-15 16:17:45.069 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 16:17:45.070 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-15 16:17:45.071 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 16:17:45.073 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-15 16:17:45.073 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 16:17:45.076 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 16:17:45.076 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-15 16:17:45.078 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-15 16:17:45.079 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-15 16:17:45.080 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-15 16:17:45.082 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-15 16:17:45.084 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-15 16:17:45.088 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 16:17:45.089 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-15 16:17:45.094 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:17:45 | 耗时 1 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-15 16:17:59.346 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:17:59.380 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 16:17:59 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'doctor';
2025-07-15 16:18:12.515 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 3 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:18:12.520 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 16:18:12 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'doctor';
2025-07-15 16:18:42.869 febs [Thread-16] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-15 16:18:45.102 febs [Thread-16] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - stopped toiletMqttInbound
2025-07-15 16:18:45.103 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-15 16:18:45.104 febs [Thread-16] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 0 subscriber(s).
2025-07-15 16:18:45.105 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped _org.springframework.integration.errorLogger
2025-07-15 16:18:45.105 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-15 16:18:45.105 febs [Thread-16] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 0 subscriber(s).
2025-07-15 16:18:45.105 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-15 16:18:45.105 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-15 16:18:45.105 febs [Thread-16] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 0 subscriber(s).
2025-07-15 16:18:45.105 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-15 16:18:45.113 febs [Thread-16] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2025-07-15 16:18:45.114 febs [Thread-16] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2025-07-15 16:18:45.114 febs [Thread-16] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-07-15 16:18:45.114 febs [Thread-16] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-15 16:18:45.115 febs [Thread-16] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-07-15 16:18:45.144 febs [Thread-16] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2025-07-15 16:18:45.151 febs [Thread-16] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2025-07-15 16:18:45.152 febs [Thread-16] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2025-07-15 16:18:45.155 febs [Thread-16] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2025-07-15 16:18:53.642 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 22316 (F:\TMSmanager\backend\target\classes started by 江西杰联医疗设备有限公司 in F:\TMSmanager\backend)
2025-07-15 16:18:53.643 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-15 16:18:54.280 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-15 16:18:54.282 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-15 16:18:54.308 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 0 repository interfaces.
2025-07-15 16:18:54.494 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-15 16:18:54.503 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-15 16:18:54.542 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$f0ef4fc2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:54.641 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:54.710 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$cb3e9b66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:54.717 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:54.720 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:54.727 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$61b02a95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:54.782 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$cd302c3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:55.081 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$c5f4e392] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:55.095 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:55.097 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:55.170 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:55.175 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$b33786a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:55.178 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:55.182 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$9f78972f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:55.189 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:55.190 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:55.192 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-15 16:18:55.200 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-15 16:18:55.679 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-15 16:18:55.679 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-15 16:18:55.679 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-15 16:18:55.679 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-15 16:18:55.679 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:55.687 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:55.692 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.017 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.022 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.024 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.025 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.042 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.043 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.049 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.050 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.050 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.078 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.091 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.107 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.108 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.109 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.124 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.125 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.141 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.142 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.144 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.160 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.161 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy127] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.162 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.171 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.186 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$bd43aa26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.189 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$6f906c3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.190 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$2aa7522e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.194 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.195 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.200 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$5172c95c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.204 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.206 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$9f4f47b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.215 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.216 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.220 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.222 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.237 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.244 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.247 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.247 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.253 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.262 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.270 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$cca1e5c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.279 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:18:58.584 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-15 16:18:58.595 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-15 16:18:58.598 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-15 16:18:58.598 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-15 16:18:58.602 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-15 16:18:58.940 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-15 16:18:58.940 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5273 ms
2025-07-15 16:18:59.392 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-15 16:18:59.393 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-15 16:18:59.393 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-15 16:18:59.393 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-15 16:18:59.393 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-15 16:18:59.393 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-15 16:18:59.393 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-15 16:18:59.393 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-15 16:19:00.200 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-15 16:19:01.205 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-15 16:19:01.213 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-15 16:19:01.214 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-15 16:19:01.214 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-15 16:19:01.214 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-15 16:19:01.214 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-15 16:19:01.214 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-15 16:19:01.214 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@d5e3f55
2025-07-15 16:19:01.232 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-15 16:19:01.274 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-15 16:19:01.470 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-15 16:19:01.471 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-15 16:19:01.471 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-15 16:19:01.471 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-15 16:19:01.471 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-15 16:19:01.471 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-15 16:19:01.471 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-15 16:19:01.471 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-15 16:19:01.471 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-15 16:19:02.357 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-15 16:19:02.357 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-15 16:19:02.357 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-15 16:19:02.389 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-15 16:19:02.401 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-15 16:19:02.412 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-15 16:19:02.414 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 9.082 seconds (JVM running for 14.338)
2025-07-15 16:19:02.421 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-15 16:19:02.430 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-15 16:19:02.431 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-15 16:19:02.450 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 16:19:02.450 febs [main] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-15 16:19:02.462 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 16:19:02.464 febs [main] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 16:19:02.472 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 16:19:02.477 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 16:19:02.510 febs [main] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-15 16:19:02.519 febs [main] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-15 16:19:02.523 febs [main] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-15 16:19:02.527 febs [main] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'doctor' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 16:19:02.529 febs [main] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'doctor';
2025-07-15 16:19:02.531 febs [main] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'doctor' and m.perms is not null and m.perms <> '';
2025-07-15 16:19:02.532 febs [main] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-15 16:19:02.534 febs [main] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'nurse' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 16:19:02.536 febs [main] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nurse';
2025-07-15 16:19:02.538 febs [main] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'nurse' and m.perms is not null and m.perms <> '';
2025-07-15 16:19:02.538 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-15 16:19:02.539 febs [main] INFO  p6spy - 2025-07-15 16:19:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='3' ;
2025-07-15 16:19:02.539 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-15 16:19:02.539 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-15 16:19:02.539 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-15 16:19:02.539 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-15 16:19:02.539 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-15T16:19:02.539
2025-07-15 16:19:03.022 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-15 16:19:03.023 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-15 16:19:03.044 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2025-07-15 16:19:03.069 febs [RMI TCP Connection(1)-192.168.10.15] INFO  p6spy - 2025-07-15 16:19:03 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-15 16:19:06.263 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:19:50.443 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:20:33.394 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:21:18.740 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:23:42.450 febs [http-nio-9527-exec-9] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:24:45.638 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:24:45 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 16:24:45.642 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:24:45 | 耗时 1 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 16:24:52.391 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:24:52 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 16:24:52.393 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:24:52 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 16:25:09.074 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:25:29.484 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 16:25:29 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'admin';
2025-07-15 16:25:29.503 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 16:25:29 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'admin';
2025-07-15 16:26:18.026 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 16:26:18 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'doct';
2025-07-15 16:26:19.129 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:26:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'docto';
2025-07-15 16:26:19.617 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 16:26:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'doctor';
2025-07-15 16:26:20.771 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 16:26:20 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'doctor';
2025-07-15 16:27:02.214 febs [Thread-24] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-15 16:27:04.418 febs [Thread-24] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - stopped toiletMqttInbound
2025-07-15 16:27:04.418 febs [Thread-24] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-15 16:27:04.419 febs [Thread-24] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 0 subscriber(s).
2025-07-15 16:27:04.419 febs [Thread-24] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped _org.springframework.integration.errorLogger
2025-07-15 16:27:04.419 febs [Thread-24] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-15 16:27:04.419 febs [Thread-24] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 0 subscriber(s).
2025-07-15 16:27:04.419 febs [Thread-24] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-15 16:27:04.419 febs [Thread-24] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-15 16:27:04.419 febs [Thread-24] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 0 subscriber(s).
2025-07-15 16:27:04.419 febs [Thread-24] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-15 16:27:04.420 febs [Thread-24] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2025-07-15 16:27:04.420 febs [Thread-24] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2025-07-15 16:27:04.420 febs [Thread-24] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-07-15 16:27:04.420 febs [Thread-24] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-15 16:27:04.420 febs [Thread-24] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-07-15 16:27:04.426 febs [Thread-24] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2025-07-15 16:27:04.429 febs [Thread-24] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2025-07-15 16:27:04.429 febs [Thread-24] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2025-07-15 16:27:04.432 febs [Thread-24] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2025-07-15 16:28:17.684 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 32664 (F:\TMSmanager\backend\target\classes started by 江西杰联医疗设备有限公司 in F:\TMSmanager\backend)
2025-07-15 16:28:17.685 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-15 16:28:18.325 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-15 16:28:18.327 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-15 16:28:18.354 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 0 repository interfaces.
2025-07-15 16:28:18.537 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-15 16:28:18.548 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-15 16:28:18.587 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$5015cf61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.672 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.786 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2a651b05] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.792 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.795 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.802 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c0d6aa34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.812 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$2c56abdd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.858 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$251b6331] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.870 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.871 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.927 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.932 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$125e0643] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.934 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.938 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$fe9f16ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.943 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.944 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:18.945 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-15 16:28:18.950 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-15 16:28:19.168 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-15 16:28:19.168 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-15 16:28:19.168 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-15 16:28:19.168 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-15 16:28:19.168 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.175 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.180 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.619 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.623 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.625 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.626 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.640 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.641 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.645 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.646 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.647 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.671 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.685 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.703 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.704 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.705 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.723 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.724 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.748 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.749 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.752 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.770 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.771 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy127] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.772 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.783 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.800 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$1c6a29c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.803 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$ceb6ebde] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.805 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$89cdd1cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.809 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.811 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.824 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$b09948fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.828 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.829 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$fe75c754] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.839 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.840 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.842 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.844 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.859 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.867 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.870 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.870 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.876 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.885 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.892 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$2bc86563] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:19.902 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:28:20.181 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-15 16:28:20.191 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-15 16:28:20.194 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-15 16:28:20.194 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-15 16:28:20.198 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-15 16:28:20.289 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-15 16:28:20.289 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2575 ms
2025-07-15 16:28:20.693 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-15 16:28:20.694 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-15 16:28:20.694 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-15 16:28:20.694 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-15 16:28:20.694 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-15 16:28:20.694 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-15 16:28:20.694 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-15 16:28:20.694 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-15 16:28:21.476 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-15 16:28:22.438 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-15 16:28:22.446 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-15 16:28:22.446 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-15 16:28:22.446 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-15 16:28:22.447 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-15 16:28:22.447 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-15 16:28:22.447 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-15 16:28:22.447 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@73316a0a
2025-07-15 16:28:22.465 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-15 16:28:22.507 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-15 16:28:22.709 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-15 16:28:22.709 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-15 16:28:22.709 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-15 16:28:22.709 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-15 16:28:22.709 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-15 16:28:22.709 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-15 16:28:22.709 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-15 16:28:22.709 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-15 16:28:22.709 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-15 16:28:23.630 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-15 16:28:23.630 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-15 16:28:23.630 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-15 16:28:23.653 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-15 16:28:23.666 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-15 16:28:23.677 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-15 16:28:23.679 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.33 seconds (JVM running for 6.931)
2025-07-15 16:28:23.686 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-15 16:28:23.695 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-15 16:28:23.695 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-15 16:28:23.713 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 16:28:23.713 febs [main] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-15 16:28:23.725 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 16:28:23.726 febs [main] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 16:28:23.736 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 16:28:23.741 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 16:28:23.771 febs [main] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-15 16:28:23.779 febs [main] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-15 16:28:23.783 febs [main] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-15 16:28:23.787 febs [main] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'doctor' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 16:28:23.788 febs [main] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'doctor';
2025-07-15 16:28:23.790 febs [main] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'doctor' and m.perms is not null and m.perms <> '';
2025-07-15 16:28:23.792 febs [main] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-15 16:28:23.794 febs [main] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'nurse' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 16:28:23.796 febs [main] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nurse';
2025-07-15 16:28:23.798 febs [main] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'nurse' and m.perms is not null and m.perms <> '';
2025-07-15 16:28:23.799 febs [main] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='3' ;
2025-07-15 16:28:23.799 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-15 16:28:23.799 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-15 16:28:23.799 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-15 16:28:23.799 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-15 16:28:23.799 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-15T16:28:23.799
2025-07-15 16:28:23.808 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-15 16:28:23.944 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-15 16:28:23.944 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-15 16:28:23.955 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2025-07-15 16:28:23.956 febs [RMI TCP Connection(2)-192.168.10.15] INFO  p6spy - 2025-07-15 16:28:23 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-15 16:28:28.475 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:29:29.050 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 16:29:29 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'doctor' and m.perms is not null and m.perms <> '';
2025-07-15 16:29:33.451 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 16:29:33.470 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 16:29:33 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.DELETE_MARK = 0 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'doctor') order by m.order_num;
2025-07-15 16:29:33.565 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 16:29:33.573 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 16:29:33 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 16:29:33.576 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 16:29:33 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 16:29:33.580 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 16:29:33 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 16:29:33.582 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 16:29:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 16:29:33.584 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 16:29:33 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'doctor' group by days;
2025-07-15 16:29:55.469 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:29:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 16:29:55.473 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:29:55 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 16:29:57.135 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:29:57 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 16:29:57.137 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:29:57 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 16:29:58.558 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 16:29:58.561 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 16:29:58 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 16:29:58.563 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 16:29:58 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 16:29:58.565 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 16:29:58 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 16:29:58.566 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 16:29:58 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 16:29:58.568 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 16:29:58 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'doctor' group by days;
2025-07-15 16:30:02.848 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 16:30:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 16:30:02.850 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 16:30:02 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 16:30:16.320 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:30:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 16:30:16.321 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:30:16 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 16:30:17.100 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 16:30:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 16:30:17.101 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 16:30:17 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 16:30:21.124 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 16:30:21.139 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 16:30:21 | 耗时 1 ms | SQL 语句：
UPDATE t_user_config SET theme='light', layout='side', multi_page='0', color='rgb(24, 144, 255)' WHERE USER_ID=2;
2025-07-15 16:30:21.140 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 16:30:21 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-15 16:30:25.689 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:30:25 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 16:30:25.691 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:30:25 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 16:30:27.034 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 16:30:27.037 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:30:27 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 16:30:27.039 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:30:27 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 16:30:27.040 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:30:27 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 16:30:27.041 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:30:27 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 16:30:27.043 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:30:27 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'doctor' group by days;
2025-07-15 16:30:29.186 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 16:30:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 16:30:29.187 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 16:30:29 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 16:30:31.315 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:30:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 16:30:31.316 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:30:31 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 16:30:32.065 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:30:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 16:30:32.065 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:30:32 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 16:31:20.991 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:32:12.715 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:32:20.096 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-15 16:32:22.316 febs [Thread-18] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - stopped toiletMqttInbound
2025-07-15 16:32:22.316 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-15 16:32:22.317 febs [Thread-18] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 0 subscriber(s).
2025-07-15 16:32:22.317 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped _org.springframework.integration.errorLogger
2025-07-15 16:32:22.317 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-15 16:32:22.317 febs [Thread-18] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 0 subscriber(s).
2025-07-15 16:32:22.317 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-15 16:32:22.317 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-15 16:32:22.317 febs [Thread-18] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 0 subscriber(s).
2025-07-15 16:32:22.317 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-15 16:32:22.317 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2025-07-15 16:32:22.318 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2025-07-15 16:32:22.318 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-07-15 16:32:22.318 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-15 16:32:22.318 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-07-15 16:32:22.325 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2025-07-15 16:32:22.328 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2025-07-15 16:32:22.328 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2025-07-15 16:32:22.331 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2025-07-15 16:32:26.148 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 30376 (F:\TMSmanager\backend\target\classes started by 江西杰联医疗设备有限公司 in F:\TMSmanager\backend)
2025-07-15 16:32:26.149 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-15 16:32:26.760 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-15 16:32:26.761 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-15 16:32:26.788 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18ms. Found 0 repository interfaces.
2025-07-15 16:32:26.967 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-15 16:32:26.977 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-15 16:32:27.015 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$e368c355] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.103 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.168 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$bdb80ef9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.174 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.177 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.184 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$54299e28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.233 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$bfa99fd1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$b86e5725] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.290 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.292 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.346 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$a5b0fa37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.353 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.357 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$91f20ac2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.363 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.365 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-15 16:32:27.370 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-15 16:32:27.592 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-15 16:32:27.592 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-15 16:32:27.592 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-15 16:32:27.592 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-15 16:32:27.592 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.600 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:27.604 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.063 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.067 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.069 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.070 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.086 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.087 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.091 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.092 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.092 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.119 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.132 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.149 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.150 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.151 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.166 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.167 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.187 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.188 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.190 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.208 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.209 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy127] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.210 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.226 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.241 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$afbd1db9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.244 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$6209dfd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.246 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$1d20c5c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.250 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.252 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.257 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$43ec3cef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.261 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.263 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$91c8bb48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.274 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.277 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.279 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.294 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.301 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.305 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.305 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.310 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.325 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$bf1b5957] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.334 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-15 16:32:28.590 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-15 16:32:28.599 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-15 16:32:28.603 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-15 16:32:28.603 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-15 16:32:28.607 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-15 16:32:28.697 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-15 16:32:28.697 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2523 ms
2025-07-15 16:32:29.104 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-15 16:32:29.105 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-15 16:32:29.105 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-15 16:32:29.105 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-15 16:32:29.105 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-15 16:32:29.105 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-15 16:32:29.105 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-15 16:32:29.105 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-15 16:32:29.886 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-15 16:32:30.840 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-15 16:32:30.847 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-15 16:32:30.847 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-15 16:32:30.847 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-15 16:32:30.848 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-15 16:32:30.848 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-15 16:32:30.848 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-15 16:32:30.848 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@2ba318c2
2025-07-15 16:32:30.866 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-15 16:32:30.908 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-15 16:32:31.108 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-15 16:32:31.108 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-15 16:32:31.109 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-15 16:32:31.109 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-15 16:32:31.109 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-15 16:32:31.109 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-15 16:32:31.109 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-15 16:32:31.109 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-15 16:32:31.109 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-15 16:32:31.968 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-15 16:32:31.968 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-15 16:32:31.968 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-15 16:32:31.992 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-15 16:32:32.005 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-15 16:32:32.015 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-15 16:32:32.017 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.179 seconds (JVM running for 6.762)
2025-07-15 16:32:32.024 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-15 16:32:32.033 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-15 16:32:32.033 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-15 16:32:32.040 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 16:32:32.040 febs [main] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-15 16:32:32.052 febs [main] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 16:32:32.064 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 1 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 16:32:32.102 febs [main] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-15 16:32:32.110 febs [main] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-15 16:32:32.114 febs [main] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-15 16:32:32.118 febs [main] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'doctor' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 16:32:32.120 febs [main] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'doctor';
2025-07-15 16:32:32.122 febs [main] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'doctor' and m.perms is not null and m.perms <> '';
2025-07-15 16:32:32.123 febs [main] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-15 16:32:32.125 febs [main] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'nurse' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-15 16:32:32.127 febs [main] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nurse';
2025-07-15 16:32:32.129 febs [main] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'nurse' and m.perms is not null and m.perms <> '';
2025-07-15 16:32:32.130 febs [main] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='3' ;
2025-07-15 16:32:32.130 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-15 16:32:32.130 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-15 16:32:32.130 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-15 16:32:32.130 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-15 16:32:32.130 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-15T16:32:32.130
2025-07-15 16:32:32.135 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 16:32:32.138 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 16:32:32.139 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-15 16:32:32.623 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-15 16:32:32.623 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-15 16:32:32.641 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2025-07-15 16:32:32.725 febs [RMI TCP Connection(3)-192.168.10.15] INFO  p6spy - 2025-07-15 16:32:32 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-15 16:32:49.899 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:32:53.497 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 16:32:53 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'nurse' and m.perms is not null and m.perms <> '';
2025-07-15 16:32:53.499 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-15 16:32:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='3' ;
2025-07-15 16:33:59.757 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:34:02.273 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 16:34:02 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'nurse' and m.perms is not null and m.perms <> '';
2025-07-15 16:34:02.275 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 16:34:02 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='3' ;
2025-07-15 16:37:32.002 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:37:32 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 16:37:32.004 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:37:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 16:38:21.994 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:38:21 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 16:38:21.996 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:38:21 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 16:41:27.406 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:41:30.262 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:41:30 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'nurse' and m.perms is not null and m.perms <> '';
2025-07-15 16:41:30.264 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:41:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='3' ;
2025-07-15 16:41:30.293 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 16:41:30.310 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 16:41:30 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.DELETE_MARK = 0 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nurse') order by m.order_num;
2025-07-15 16:41:30.442 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 16:41:30.448 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:41:30 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 16:41:30.451 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:41:30 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 16:41:30.454 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:41:30 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 16:41:30.456 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:41:30 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 16:41:30.459 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-15 16:41:30 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'nurse' group by days;
2025-07-15 16:41:56.993 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 16:41:56 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 16:41:56.997 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 16:41:56 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 16:42:00.103 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 16:42:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 16:42:00.104 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 16:42:00 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 16:42:32.007 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:42:32 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 16:42:32.009 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:42:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 16:43:15.351 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:43:19.057 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 16:43:19 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'nurse' and m.perms is not null and m.perms <> '';
2025-07-15 16:43:19.060 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 16:43:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='3' ;
2025-07-15 16:43:19.068 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 16:43:19.071 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 16:43:19 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.DELETE_MARK = 0 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'nurse') order by m.order_num;
2025-07-15 16:43:19.136 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 16:43:19.139 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:43:19 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 16:43:19.140 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:43:19 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 16:43:19.143 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:43:19 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 16:43:19.144 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:43:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 16:43:19.145 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:43:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'nurse' group by days;
2025-07-15 16:43:22.606 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 16:43:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 16:43:22.608 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 16:43:22 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 16:43:45.259 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-15 16:43:45.264 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 16:43:45 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'doctor' and m.perms is not null and m.perms <> '';
2025-07-15 16:43:45.274 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 16:43:45.276 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 16:43:45 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.DELETE_MARK = 0 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'doctor') order by m.order_num;
2025-07-15 16:43:45.322 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-15 16:43:45.325 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:43:45 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-15 16:43:45.326 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:43:45 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-15 16:43:45.327 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:43:45 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-15 16:43:45.328 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:43:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-15 16:43:45.329 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-15 16:43:45 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'doctor' group by days;
2025-07-15 16:43:51.463 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 16:43:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 16:43:51.464 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 16:43:51 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 16:44:12.000 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:44:12 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 16:44:12.002 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:44:12 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 16:47:31.994 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:47:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 16:47:31.996 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:47:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 16:50:02.003 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:50:02 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 16:50:02.007 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:50:02 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 16:52:31.993 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:52:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 16:52:31.995 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:52:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 16:53:22.406 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 16:53:22 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 16:53:22.407 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 16:53:22 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 16:53:23.135 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 16:53:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 16:53:23.136 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-15 16:53:23 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 16:53:24.232 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 16:53:24 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 16:53:24.232 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-15 16:53:24 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 16:53:25.080 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 16:53:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 16:53:25.081 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 16:53:25 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 16:53:27.014 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 16:53:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 16:53:27.015 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-15 16:53:27 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 16:53:27.622 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 16:53:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 16:53:27.623 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-15 16:53:27 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 16:53:30.477 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:53:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 16:53:30.478 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-15 16:53:30 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 16:53:31.248 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 16:53:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-15 16:53:31.249 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-15 16:53:31 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-15 16:55:52.007 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:55:52 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 16:55:52.009 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:55:52 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 16:57:31.996 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:57:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 16:57:31.999 febs [scheduling-1] INFO  p6spy - 2025-07-15 16:57:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 17:01:42.004 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:01:42 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 17:01:42.005 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:01:42 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 17:02:32.000 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:02:32 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 17:02:32.002 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:02:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 17:07:32.007 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:07:32 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 17:07:32.009 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:07:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 17:07:32.032 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:07:32 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 17:07:32.033 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:07:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 17:12:31.998 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:12:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 17:12:32.000 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:12:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 17:13:21.994 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:13:21 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 17:13:21.996 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:13:21 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 17:17:32.004 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:17:32 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 17:17:32.006 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:17:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 17:19:11.994 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:19:11 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 17:19:11.996 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:19:11 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 17:22:32.006 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:22:32 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 17:22:32.009 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:22:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 17:25:02.000 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:25:02 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 17:25:02.002 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:25:02 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 17:25:37.236 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 17:25:37 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM patient;
2025-07-15 17:25:37.237 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-15 17:25:37 | 耗时 0 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient LIMIT 0,10;
2025-07-15 17:27:32.007 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:27:32 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 17:27:32.009 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:27:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 17:30:52.009 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:30:52 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 17:30:52.011 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:30:52 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 17:32:32.006 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:32:32 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 17:32:32.008 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:32:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 17:32:32.024 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-15 17:36:41.993 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:36:41 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 17:36:41.995 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:36:41 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 17:37:31.992 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:37:31 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 17:37:31.994 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:37:31 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 17:42:32.008 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:42:32 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 17:42:32.011 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:42:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 17:42:32.033 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:42:32 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 17:42:32.035 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:42:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 17:47:32.008 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:47:32 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 17:47:32.011 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:47:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 17:48:22.013 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:48:22 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 17:48:22.015 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:48:22 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 17:52:32.005 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:52:32 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 17:52:32.007 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:52:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 17:54:12.005 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:54:12 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 17:54:12.007 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:54:12 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 17:57:32.005 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:57:32 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 17:57:32.007 febs [scheduling-1] INFO  p6spy - 2025-07-15 17:57:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-15 18:00:02.006 febs [scheduling-1] INFO  p6spy - 2025-07-15 18:00:02 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-15 18:00:02.008 febs [scheduling-1] INFO  p6spy - 2025-07-15 18:00:02 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-15 18:02:32.001 febs [scheduling-1] INFO  p6spy - 2025-07-15 18:02:32 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-15 18:02:32.004 febs [scheduling-1] INFO  p6spy - 2025-07-15 18:02:32 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
