2025-07-14 11:04:11.153 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 31532 (F:\TMSmanager\backend\target\classes started by 江西杰联医疗设备有限公司 in F:\TMSmanager\backend)
2025-07-14 11:04:11.156 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-14 11:04:12.774 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-14 11:04:12.775 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-14 11:04:12.800 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18ms. Found 0 repository interfaces.
2025-07-14 11:04:12.960 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-14 11:04:12.968 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-14 11:04:13.001 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$7ca7bb4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.082 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.141 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$56f706f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.147 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.149 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.155 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed689622] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.165 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$58e897cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.208 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$51ad4f1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.262 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.264 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.323 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$3eeff231] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$2b3102bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.339 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.341 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-14 11:04:13.345 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-14 11:04:13.523 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-14 11:04:13.524 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-14 11:04:13.524 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-14 11:04:13.524 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-14 11:04:13.524 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.531 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.537 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.108 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.112 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.114 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.115 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.127 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.128 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.131 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.132 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.133 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.155 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.167 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.182 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.182 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.184 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.199 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.215 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.216 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.218 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.234 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.235 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.236 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.244 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.258 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$48fc15b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.261 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$fb48d7cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.262 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$b65fbdbb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.267 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.269 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$dd2b34e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.277 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$2b07b342] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.285 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.287 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.291 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.304 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.311 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.314 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.314 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$585a5151] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.555 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-14 11:04:14.562 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-14 11:04:14.564 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-14 11:04:14.565 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-14 11:04:14.568 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-14 11:04:14.644 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-14 11:04:14.644 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3448 ms
2025-07-14 11:04:14.995 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-14 11:04:14.995 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-14 11:04:14.996 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-14 11:04:14.996 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-14 11:04:14.996 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-14 11:04:14.996 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-14 11:04:14.996 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-14 11:04:14.996 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-14 11:04:15.652 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-14 11:04:16.425 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-14 11:04:16.431 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-14 11:04:16.431 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-14 11:04:16.431 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-14 11:04:16.432 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-14 11:04:16.432 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-14 11:04:16.432 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-14 11:04:16.432 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@4bdef487
2025-07-14 11:04:16.446 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-14 11:04:16.478 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-14 11:04:16.624 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 11:04:16.624 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-14 11:04:16.625 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-14 11:04:16.625 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 11:04:16.625 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-14 11:04:16.625 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 11:04:16.625 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 11:04:16.625 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-14 11:04:16.625 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 11:04:17.368 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-14 11:04:17.368 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-14 11:04:17.368 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-14 11:04:17.387 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-14 11:04:17.394 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-14 11:04:17.404 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-14 11:04:17.405 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.544 seconds (JVM running for 7.049)
2025-07-14 11:04:17.411 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-14 11:04:17.418 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-14 11:04:17.418 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-14 11:04:17.436 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 8 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 11:04:17.436 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-14 11:04:17.448 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 11:04:17.457 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 11:04:17.488 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2025-07-14 11:04:17.496 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2025-07-14 11:04:17.505 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-14 11:04:17.508 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 11:04:17.510 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2025-07-14 11:04:17.512 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2025-07-14 11:04:17.512 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 11:04:17.514 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-14 11:04:17.514 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 11:04:17.515 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 11:04:17.516 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-14 11:04:17.517 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2025-07-14 11:04:17.518 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2025-07-14 11:04:17.520 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2025-07-14 11:04:17.521 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 11:04:17.523 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2025-07-14 11:04:17.524 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2025-07-14 11:04:17.525 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2025-07-14 11:04:17.526 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 11:04:17.527 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-14 11:04:17.529 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-14 11:04:17.530 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2025-07-14 11:04:17.531 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '1111' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 11:04:17.532 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '1111';
2025-07-14 11:04:17.533 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '1111' and m.perms is not null and m.perms <> '';
2025-07-14 11:04:17.534 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2025-07-14 11:04:17.535 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-14 11:04:17.535 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-14 11:04:17.535 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-14 11:04:17.535 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-14 11:04:17.535 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-14T11:04:17.535
2025-07-14 11:04:17.921 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-14 11:04:17.922 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-14 11:04:17.943 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2025-07-14 11:04:17.951 febs [RMI TCP Connection(2)-192.168.10.15] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-14 11:05:16.718 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 11:05:16.720 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 11:05:16.723 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 11:05:16.725 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 11:05:16.731 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 11:05:16.732 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 11:05:16.733 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 11:05:16.734 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 11:05:16.739 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 3 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 11:05:16.740 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 11:05:16.741 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 11:05:16.747 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 1 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 11:05:16.798 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 11:05:16.799 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 11:05:16.801 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 11:05:16.802 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 11:05:16.805 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 11:05:25.736 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 11:05:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-14 11:05:25.740 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 11:05:25 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-14 11:05:46.228 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:05:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM device_type WHERE 1 = 1;
2025-07-14 11:05:46.230 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:05:46 | 耗时 1 ms | SQL 语句：
select id, code, name, remark, create_date, images from device_type where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-14 11:05:52.313 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:05:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM operate_record_info ori LEFT JOIN device_info di ON (di.id = ori.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:05:52.314 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:05:52 | 耗时 0 ms | SQL 语句：
select ori.id, ori.device_id, ori.open_flag, ori.device_value, ori.device_old_value, ori.create_date, di.code as deviceCode, di.name as deviceName, di.remark, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from operate_record_info ori left join device_info di on (di.id = ori.device_id) left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by ori.create_date desc LIMIT 0,10;
2025-07-14 11:05:55.591 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM device_offline_record dor LEFT JOIN device_info di ON (di.id = dor.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:05:55.592 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:55 | 耗时 0 ms | SQL 语句：
select dor.id, dor.device_id, dor.online_date, dor.offline, dor.type, di.code as deviceCode, di.name as deviceName, di.remark, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_offline_record dor left join device_info di on (di.id = dor.device_id) left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by dor.online_date desc LIMIT 0,10;
2025-07-14 11:05:57.665 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 11:05:57 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM message_info LEFT JOIN user_info ON (user_info.id = message_info.send_user) WHERE 1 = 1;
2025-07-14 11:05:57.666 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 11:05:57 | 耗时 0 ms | SQL 语句：
select message_info.id, message_info.send_user, message_info.content, message_info.create_date, message_info.read_status, user_info.name as userName, user_info.images as userImages from message_info left join user_info on (user_info.id = message_info.send_user) where 1 = 1 order by message_info.create_date desc LIMIT 0,10;
2025-07-14 11:06:00.701 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:06:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_history_info dhi LEFT JOIN device_info di ON (di.id = dhi.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:06:00.703 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:06:00 | 耗时 1 ms | SQL 语句：
select dhi.id, dhi.device_id, dhi.device_value, dhi.alert_value, dhi.create_date, di.code as deviceCode, di.name as deviceName, di.remark, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_history_info dhi left join device_info di on (di.id = dhi.device_id) left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by dhi.create_date desc LIMIT 0,10;
2025-07-14 11:06:02.201 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 11:06:02 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,remark,create_date,images FROM device_type;
2025-07-14 11:06:02.207 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 11:06:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:06:02.209 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 11:06:02 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,10;
2025-07-14 11:06:05.526 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:06:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM bulletin_info bi WHERE 1 = 1;
2025-07-14 11:06:05.528 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:06:05 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.title, bi.content, bi.images, bi.date AS createDate, bi.publisher, bi.rack_up AS rackUp, bi.type FROM bulletin_info bi WHERE 1 = 1 ORDER BY bi.date DESC LIMIT 0,10;
2025-07-14 11:06:07.638 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:07 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 11:06:07.644 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 11:06:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_alert_info LEFT JOIN device_info ON (device_info.id = device_alert_info.device_id) LEFT JOIN device_type ON (device_type.id = device_info.type_id) LEFT JOIN user_info ON (user_info.id = device_info.user_id) WHERE 1 = 1;
2025-07-14 11:06:07.645 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 11:06:07 | 耗时 0 ms | SQL 语句：
select device_alert_info.id, device_alert_info.device_id, device_alert_info.device_type_id, device_alert_info.`type`, device_alert_info.score, device_alert_info.create_date, device_alert_info.remark, device_info.code as deviceCode, device_info.name as deviceName, device_info.remark, device_type.name as typeName, device_type.images, user_info.name as userName, user_info.images as userImages from device_alert_info left join device_info on (device_info.id = device_alert_info.device_id) left join device_type on (device_type.id = device_info.type_id) left join user_info on (user_info.id = device_info.user_id) where 1 = 1 order by device_alert_info.create_date desc LIMIT 0,10;
2025-07-14 11:06:10.564 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 11:06:10 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:06:10.565 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 11:06:10 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,500;
2025-07-14 11:06:12.112 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:06:12 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:06:12.113 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:06:12 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,36;
2025-07-14 11:06:23.540 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 11:06:23.540 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 11:06:23.542 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 11:06:23.545 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 11:06:23.545 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 11:06:23.546 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 11:06:23.546 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 11:06:23.547 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 11:06:23.547 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 11:06:23.548 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 11:06:23.548 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 11:06:23.550 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 11:06:23.550 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 11:06:23.550 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 11:06:23.552 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 11:06:23.553 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 11:06:23.555 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 11:06:26.896 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 11:06:26 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 11:06:26.908 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 11:06:26 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM device_alert_info LEFT JOIN device_info ON (device_info.id = device_alert_info.device_id) LEFT JOIN device_type ON (device_type.id = device_info.type_id) LEFT JOIN user_info ON (user_info.id = device_info.user_id) WHERE 1 = 1;
2025-07-14 11:06:26.910 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 11:06:26 | 耗时 1 ms | SQL 语句：
select device_alert_info.id, device_alert_info.device_id, device_alert_info.device_type_id, device_alert_info.`type`, device_alert_info.score, device_alert_info.create_date, device_alert_info.remark, device_info.code as deviceCode, device_info.name as deviceName, device_info.remark, device_type.name as typeName, device_type.images, user_info.name as userName, user_info.images as userImages from device_alert_info left join device_info on (device_info.id = device_alert_info.device_id) left join device_type on (device_type.id = device_info.type_id) left join user_info on (user_info.id = device_info.user_id) where 1 = 1 order by device_alert_info.create_date desc LIMIT 0,10;
2025-07-14 11:06:27.889 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:06:27 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM bulletin_info bi WHERE 1 = 1;
2025-07-14 11:06:27.890 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:06:27 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.title, bi.content, bi.images, bi.date AS createDate, bi.publisher, bi.rack_up AS rackUp, bi.type FROM bulletin_info bi WHERE 1 = 1 ORDER BY bi.date DESC LIMIT 0,10;
2025-07-14 11:06:30.570 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:06:30.572 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:30 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,500;
2025-07-14 11:06:31.697 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 11:06:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:06:31.699 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 11:06:31 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,36;
2025-07-14 11:09:17.402 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:09:17 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 11:09:17.403 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:09:17 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 11:10:07.400 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:10:07 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 11:10:07.401 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:10:07 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 11:14:17.391 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:14:17 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 11:14:17.393 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:14:17 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 11:15:57.398 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:15:57 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 11:15:57.401 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:15:57 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 11:19:07.226 febs [Thread-16] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 11:19:09.431 febs [Thread-16] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - stopped toiletMqttInbound
2025-07-14 11:19:09.431 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 11:19:09.431 febs [Thread-16] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 0 subscriber(s).
2025-07-14 11:19:09.431 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped _org.springframework.integration.errorLogger
2025-07-14 11:19:09.431 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 11:19:09.431 febs [Thread-16] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 0 subscriber(s).
2025-07-14 11:19:09.432 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 11:19:09.432 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 11:19:09.432 febs [Thread-16] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 0 subscriber(s).
2025-07-14 11:19:09.432 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 11:19:09.433 febs [Thread-16] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2025-07-14 11:19:09.433 febs [Thread-16] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2025-07-14 11:19:09.433 febs [Thread-16] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-07-14 11:19:09.433 febs [Thread-16] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 11:19:09.433 febs [Thread-16] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-07-14 11:19:09.438 febs [Thread-16] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2025-07-14 11:19:09.441 febs [Thread-16] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2025-07-14 11:19:09.441 febs [Thread-16] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2025-07-14 11:19:09.447 febs [Thread-16] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2025-07-14 14:38:42.046 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 28504 (F:\TMSmanager\backend\target\classes started by 江西杰联医疗设备有限公司 in F:\TMSmanager\backend)
2025-07-14 14:38:42.048 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-14 14:38:42.692 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-14 14:38:42.693 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-14 14:38:42.721 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 0 repository interfaces.
2025-07-14 14:38:42.888 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-14 14:38:42.896 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-14 14:38:42.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$ca60387c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.012 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.070 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a4af8420] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.076 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.077 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.084 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3b21134f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.094 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$a6a114f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.149 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$9f65cc4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.200 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.252 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.256 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$8ca86f5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.258 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.262 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$78e97fe9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.267 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.268 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.270 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-14 14:38:43.274 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-14 14:38:43.509 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-14 14:38:43.510 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-14 14:38:43.510 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-14 14:38:43.510 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-14 14:38:43.510 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.517 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.522 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.916 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.921 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.923 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.924 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.940 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.941 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.946 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.947 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.948 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.976 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:43.991 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.011 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.012 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.014 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.034 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.061 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.062 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.065 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.088 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.089 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.090 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.101 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.121 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$96b492e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.124 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$490154f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.126 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$4183ae8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.131 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.134 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.138 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$2ae3b216] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.143 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$78c0306f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.153 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.154 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.157 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.159 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.178 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.184 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.187 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.188 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.192 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.201 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.207 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$a612ce7e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.216 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:38:44.463 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-14 14:38:44.474 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-14 14:38:44.477 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-14 14:38:44.477 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-14 14:38:44.480 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-14 14:38:44.566 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-14 14:38:44.567 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2473 ms
2025-07-14 14:38:44.937 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-14 14:38:44.938 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-14 14:38:44.938 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-14 14:38:44.938 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-14 14:38:44.938 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-14 14:38:44.938 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-14 14:38:44.938 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-14 14:38:44.938 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-14 14:38:45.611 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-14 14:38:46.487 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-14 14:38:46.495 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-14 14:38:46.495 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-14 14:38:46.495 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-14 14:38:46.495 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-14 14:38:46.496 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-14 14:38:46.496 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-14 14:38:46.496 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@4604e051
2025-07-14 14:38:46.512 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-14 14:38:46.549 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-14 14:38:46.710 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 14:38:46.710 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-14 14:38:46.710 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-14 14:38:46.710 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 14:38:46.710 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-14 14:38:46.710 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 14:38:46.710 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 14:38:46.711 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-14 14:38:46.711 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 14:38:47.647 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-14 14:38:47.647 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-14 14:38:47.647 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-14 14:38:47.670 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-14 14:38:47.678 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-14 14:38:47.688 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-14 14:38:47.690 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 5.928 seconds (JVM running for 6.431)
2025-07-14 14:38:47.695 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-14 14:38:47.705 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-14 14:38:47.705 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-14 14:38:47.716 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-14 14:38:47.716 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 2 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 14:38:47.732 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:38:47.740 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 1 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 14:38:47.780 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2025-07-14 14:38:47.790 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2025-07-14 14:38:47.800 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-14 14:38:47.804 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:38:47.806 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2025-07-14 14:38:47.807 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 14:38:47.808 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2025-07-14 14:38:47.810 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 14:38:47.810 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-14 14:38:47.811 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-14 14:38:47.812 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:38:47.813 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2025-07-14 14:38:47.815 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2025-07-14 14:38:47.816 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2025-07-14 14:38:47.818 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:38:47.819 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2025-07-14 14:38:47.821 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2025-07-14 14:38:47.822 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2025-07-14 14:38:47.824 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:38:47.825 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-14 14:38:47.827 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-14 14:38:47.827 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2025-07-14 14:38:47.828 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '1111' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:38:47.830 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '1111';
2025-07-14 14:38:47.832 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '1111' and m.perms is not null and m.perms <> '';
2025-07-14 14:38:47.832 febs [main] INFO  p6spy - 2025-07-14 14:38:47 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2025-07-14 14:38:47.833 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-14 14:38:47.833 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-14 14:38:47.833 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-14 14:38:47.833 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-14 14:38:47.833 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-14T14:38:47.833
2025-07-14 14:38:48.178 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-14 14:38:48.178 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-14 14:38:48.243 febs [RMI TCP Connection(2)-192.168.10.15] INFO  p6spy - 2025-07-14 14:38:48 | 耗时 12 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-14 14:38:48.244 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 66 ms
2025-07-14 14:39:02.857 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:02 | 耗时 3 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 14:39:02.859 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 14:39:02.860 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 14:39:02.864 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 14:39:02.870 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:02 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 14:39:02.872 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:02 | 耗时 1 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 14:39:02.874 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:02 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 14:39:02.874 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:02 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 14:39:02.878 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:02 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:39:02.881 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:02 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:39:02.890 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:02 | 耗时 1 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 14:39:06.263 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-14 14:39:15.468 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-14 14:39:15.509 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-14 14:39:15.543 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 14:39:15.557 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.DELETE_MARK = 0 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2025-07-14 14:39:15.666 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 14:39:15.668 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 14:39:15.669 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 14:39:15.671 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 14:39:15.675 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 14:39:15.675 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 14:39:15.678 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 1 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 14:39:15.679 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:39:15.681 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:39:15.681 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 14:39:15.683 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 14:39:15.683 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 14:39:15.685 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 14:39:15.685 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 14:39:15.690 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:39:15.693 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:39:15.697 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:39:15 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 14:43:47.682 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:43:47 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 14:43:47.685 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:43:47 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 14:44:37.681 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:44:37 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 14:44:37.683 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:44:37 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 14:48:47.683 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:48:47 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 14:48:47.685 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:48:47 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 14:50:27.678 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:50:27 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 14:50:27.680 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:50:27 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 14:51:21.632 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 14:51:23.841 febs [Thread-17] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - stopped toiletMqttInbound
2025-07-14 14:51:23.841 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 14:51:23.841 febs [Thread-17] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 0 subscriber(s).
2025-07-14 14:51:23.841 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped _org.springframework.integration.errorLogger
2025-07-14 14:51:23.841 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 14:51:23.842 febs [Thread-17] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 0 subscriber(s).
2025-07-14 14:51:23.842 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 14:51:23.842 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 14:51:23.842 febs [Thread-17] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 0 subscriber(s).
2025-07-14 14:51:23.842 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 14:51:23.843 febs [Thread-17] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2025-07-14 14:51:23.843 febs [Thread-17] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2025-07-14 14:51:23.843 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-07-14 14:51:23.843 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 14:51:23.843 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-07-14 14:51:23.849 febs [Thread-17] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2025-07-14 14:51:23.851 febs [Thread-17] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2025-07-14 14:51:23.851 febs [Thread-17] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2025-07-14 14:51:23.862 febs [Thread-17] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2025-07-14 14:51:30.592 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 33344 (F:\TMSmanager\backend\target\classes started by 江西杰联医疗设备有限公司 in F:\TMSmanager\backend)
2025-07-14 14:51:30.594 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-14 14:51:31.169 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-14 14:51:31.170 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-14 14:51:31.195 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17ms. Found 0 repository interfaces.
2025-07-14 14:51:31.351 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-14 14:51:31.358 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-14 14:51:31.390 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$50a6ee0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.462 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.514 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2af639af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.520 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.521 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.527 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c167c8de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.537 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$2ce7ca87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.586 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$25ac81db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.630 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.631 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.683 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.688 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$12ef24ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.691 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.695 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$ff303578] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.700 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.702 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.703 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-14 14:51:31.707 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-14 14:51:31.874 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-14 14:51:31.874 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-14 14:51:31.875 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-14 14:51:31.875 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-14 14:51:31.875 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.884 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:31.889 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.253 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.257 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.259 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.260 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.274 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.279 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.280 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.305 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.334 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.335 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.350 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.369 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.372 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.388 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.389 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.390 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.417 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$1cfb486f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.420 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$cf480a88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.422 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$8a5ef077] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.426 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.427 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.431 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$b12a67a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.435 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$ff06e5fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.444 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.445 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.448 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.450 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.464 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.473 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.476 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.477 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.482 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.491 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.498 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$2c59840d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.510 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:51:32.762 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-14 14:51:32.769 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-14 14:51:32.772 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-14 14:51:32.773 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-14 14:51:32.776 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-14 14:51:32.858 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-14 14:51:32.858 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2223 ms
2025-07-14 14:51:33.190 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-14 14:51:33.191 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-14 14:51:33.191 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-14 14:51:33.191 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-14 14:51:33.191 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-14 14:51:33.191 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-14 14:51:33.191 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-14 14:51:33.191 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-14 14:51:33.810 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-14 14:51:34.599 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-14 14:51:34.606 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-14 14:51:34.606 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-14 14:51:34.606 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-14 14:51:34.606 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-14 14:51:34.607 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-14 14:51:34.607 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-14 14:51:34.607 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@390a07a0
2025-07-14 14:51:34.621 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-14 14:51:34.654 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-14 14:51:34.812 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 14:51:34.812 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-14 14:51:34.812 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-14 14:51:34.812 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 14:51:34.812 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-14 14:51:34.812 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 14:51:34.812 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 14:51:34.812 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-14 14:51:34.812 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 14:51:36.407 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-14 14:51:36.407 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-14 14:51:36.407 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-14 14:51:36.427 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-14 14:51:36.434 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-14 14:51:36.443 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-14 14:51:36.445 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.128 seconds (JVM running for 6.607)
2025-07-14 14:51:36.451 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-14 14:51:36.459 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-14 14:51:36.459 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-14 14:51:36.479 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-14 14:51:36.478 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 14:51:36.489 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 14:51:36.490 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:51:36.498 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 14:51:36.503 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 14:51:36.529 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2025-07-14 14:51:36.537 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2025-07-14 14:51:36.546 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-14 14:51:36.550 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:51:36.552 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2025-07-14 14:51:36.553 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2025-07-14 14:51:36.555 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-14 14:51:36.557 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-14 14:51:36.557 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:51:36.558 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2025-07-14 14:51:36.560 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2025-07-14 14:51:36.561 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2025-07-14 14:51:36.563 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:51:36.564 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2025-07-14 14:51:36.566 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2025-07-14 14:51:36.567 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2025-07-14 14:51:36.568 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:51:36.569 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-14 14:51:36.571 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-14 14:51:36.571 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2025-07-14 14:51:36.572 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '1111' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:51:36.574 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '1111';
2025-07-14 14:51:36.575 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '1111' and m.perms is not null and m.perms <> '';
2025-07-14 14:51:36.576 febs [main] INFO  p6spy - 2025-07-14 14:51:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2025-07-14 14:51:36.576 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-14 14:51:36.576 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-14 14:51:36.576 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-14 14:51:36.576 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-14 14:51:36.576 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-14T14:51:36.576
2025-07-14 14:51:37.013 febs [RMI TCP Connection(3)-192.168.10.15] INFO  p6spy - 2025-07-14 14:51:37 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-14 14:51:37.107 febs [RMI TCP Connection(5)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-14 14:51:37.107 febs [RMI TCP Connection(5)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-14 14:51:37.116 febs [RMI TCP Connection(5)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2025-07-14 14:51:42.363 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 14:51:42.366 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 14:51:42.369 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 14:51:42.371 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 14:51:42.377 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 1 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 14:51:42.380 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 14:51:42.381 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 14:51:42.382 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 14:51:42.384 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:51:42.384 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 14:51:42.387 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:51:42.393 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 1 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 14:51:42.447 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 14:51:42.449 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:51:42.451 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:51:42.452 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 14:51:42.454 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:51:42 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 14:51:46.857 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 14:51:46.858 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 14:51:46.872 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 14:51:46.872 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 14:51:46.873 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:51:46.873 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 14:51:46.874 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:51:46.874 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 14:51:46.876 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 14:51:46.876 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 14:51:46.876 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 14:51:46.879 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 1 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 14:51:46.881 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 1 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 14:51:46.884 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 14:51:46.886 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:51:46.889 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:51:46.892 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 14:51:46 | 耗时 1 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 14:51:54.897 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 14:51:54.897 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 14:51:54.899 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 14:51:54.900 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 14:51:54.901 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 14:51:54.902 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:51:54.902 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 14:51:54.904 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:51:54.904 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 14:51:54.906 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 14:51:54.906 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 14:51:54.907 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 14:51:54.907 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 14:51:54.908 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 14:51:54.909 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:51:54.911 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:51:54.912 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:51:54 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 14:52:04.509 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 14:52:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-14 14:52:04.514 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 14:52:04 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-14 14:52:05.240 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 14:52:05.241 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 14:52:05.242 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 14:52:05.244 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 14:52:05.244 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 14:52:05.246 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:52:05.247 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 14:52:05.248 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:52:05.248 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 14:52:05.249 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 14:52:05.249 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 14:52:05.250 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 14:52:05.250 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 14:52:05.251 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 14:52:05.253 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:52:05.255 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:52:05.257 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 14:52:05 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 14:53:26.333 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 14:53:26.333 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 14:53:26.334 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 14:53:26.335 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 14:53:26.336 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 14:53:26.336 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:53:26.337 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:53:26.337 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 14:53:26.338 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 14:53:26.338 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 14:53:26.339 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 14:53:26.339 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 14:53:26.340 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 14:53:26.341 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 14:53:26.343 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:53:26.344 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:53:26.346 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:53:26 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 14:54:21.145 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 14:54:21.146 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 14:54:21.148 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 14:54:21.148 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 14:54:21.149 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:54:21.149 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 14:54:21.150 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:54:21.151 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 14:54:21.152 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 14:54:21.152 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 14:54:21.153 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 14:54:21.153 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 14:54:21.154 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 14:54:21.155 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 14:54:21.156 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:54:21.158 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:54:21.159 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 14:54:21 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 14:56:36.433 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:56:36 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 14:56:36.435 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:56:36 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 14:57:02.682 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 14:57:04.889 febs [Thread-17] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - stopped toiletMqttInbound
2025-07-14 14:57:04.889 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 14:57:04.890 febs [Thread-17] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 0 subscriber(s).
2025-07-14 14:57:04.890 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped _org.springframework.integration.errorLogger
2025-07-14 14:57:04.890 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 14:57:04.890 febs [Thread-17] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 0 subscriber(s).
2025-07-14 14:57:04.890 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 14:57:04.890 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 14:57:04.890 febs [Thread-17] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 0 subscriber(s).
2025-07-14 14:57:04.890 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 14:57:04.891 febs [Thread-17] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2025-07-14 14:57:04.891 febs [Thread-17] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2025-07-14 14:57:04.891 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-07-14 14:57:04.891 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 14:57:04.892 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-07-14 14:57:04.898 febs [Thread-17] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2025-07-14 14:57:04.900 febs [Thread-17] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2025-07-14 14:57:04.901 febs [Thread-17] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2025-07-14 14:57:04.907 febs [Thread-17] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2025-07-14 14:57:43.487 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 32780 (F:\TMSmanager\backend\target\classes started by 江西杰联医疗设备有限公司 in F:\TMSmanager\backend)
2025-07-14 14:57:43.489 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-14 14:57:44.122 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-14 14:57:44.124 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-14 14:57:44.151 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18ms. Found 0 repository interfaces.
2025-07-14 14:57:44.318 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-14 14:57:44.326 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-14 14:57:44.361 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$50a6ee0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.434 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.488 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2af639af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.494 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.496 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.502 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c167c8de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.512 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$2ce7ca87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.565 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$25ac81db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.612 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.613 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.665 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.669 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$12ef24ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.671 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.675 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$ff303578] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.681 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.682 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.684 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-14 14:57:44.688 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-14 14:57:44.866 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-14 14:57:44.867 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-14 14:57:44.867 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-14 14:57:44.867 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-14 14:57:44.867 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.874 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:44.879 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.268 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.272 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.274 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.275 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.290 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.290 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.295 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.296 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.296 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.320 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.332 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.349 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.350 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.367 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.368 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.387 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.387 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.390 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.407 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.408 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.410 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.419 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.435 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$1cfb486f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$cf480a88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.439 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$8a5ef077] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.445 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.447 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.451 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$b12a67a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.454 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.456 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$ff06e5fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.465 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.466 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.469 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.470 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.485 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.494 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.497 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.498 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.503 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.512 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.518 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$2c59840d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.527 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 14:57:45.770 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-14 14:57:45.779 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-14 14:57:45.782 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-14 14:57:45.782 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-14 14:57:45.785 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-14 14:57:45.872 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-14 14:57:45.872 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2340 ms
2025-07-14 14:57:46.230 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-14 14:57:46.231 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-14 14:57:46.231 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-14 14:57:46.231 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-14 14:57:46.231 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-14 14:57:46.231 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-14 14:57:46.231 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-14 14:57:46.231 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-14 14:57:46.878 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-14 14:57:47.712 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-14 14:57:47.718 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-14 14:57:47.718 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-14 14:57:47.719 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-14 14:57:47.719 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-14 14:57:47.719 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-14 14:57:47.719 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-14 14:57:47.719 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@390a07a0
2025-07-14 14:57:47.735 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-14 14:57:47.770 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-14 14:57:47.939 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 14:57:47.939 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-14 14:57:47.939 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-14 14:57:47.939 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 14:57:47.939 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-14 14:57:47.939 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 14:57:47.939 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 14:57:47.939 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-14 14:57:47.939 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 14:57:49.369 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-14 14:57:49.369 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-14 14:57:49.369 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-14 14:57:49.391 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-14 14:57:49.399 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-14 14:57:49.419 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-14 14:57:49.421 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.225 seconds (JVM running for 6.733)
2025-07-14 14:57:49.427 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-14 14:57:49.436 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-14 14:57:49.436 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-14 14:57:49.446 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 14:57:49.446 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-14 14:57:49.457 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:57:49.469 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 14:57:49.501 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2025-07-14 14:57:49.509 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2025-07-14 14:57:49.520 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-14 14:57:49.523 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:57:49.525 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2025-07-14 14:57:49.526 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2025-07-14 14:57:49.528 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-14 14:57:49.530 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 14:57:49.530 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:57:49.532 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2025-07-14 14:57:49.533 febs [scheduling-1] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 14:57:49.534 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2025-07-14 14:57:49.534 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-14 14:57:49.535 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2025-07-14 14:57:49.537 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:57:49.538 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2025-07-14 14:57:49.540 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2025-07-14 14:57:49.540 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2025-07-14 14:57:49.542 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:57:49.543 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-14 14:57:49.544 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-14 14:57:49.545 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2025-07-14 14:57:49.547 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '1111' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 14:57:49.549 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '1111';
2025-07-14 14:57:49.550 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '1111' and m.perms is not null and m.perms <> '';
2025-07-14 14:57:49.551 febs [main] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2025-07-14 14:57:49.551 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-14 14:57:49.551 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-14 14:57:49.551 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-14 14:57:49.551 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-14 14:57:49.551 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-14T14:57:49.551
2025-07-14 14:57:49.931 febs [RMI TCP Connection(1)-192.168.10.15] INFO  p6spy - 2025-07-14 14:57:49 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-14 14:57:49.984 febs [RMI TCP Connection(3)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-14 14:57:49.984 febs [RMI TCP Connection(3)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-14 14:57:49.992 febs [RMI TCP Connection(3)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2025-07-14 14:57:54.943 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:57:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 14:57:54.945 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:57:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 14:57:54.948 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:57:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 14:57:54.953 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:57:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 14:57:54.959 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:57:54 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 14:57:54.961 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:57:54 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 14:57:54.963 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:57:54 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 14:57:54.966 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:57:54 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 14:57:54.970 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:57:54 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:57:54.971 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 14:57:54.973 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:57:54 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 14:57:54.981 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 14:57:54 | 耗时 1 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 14:57:55.040 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:57:55 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 14:57:55.042 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:57:55 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:57:55.044 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:57:55 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 14:57:55.046 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:57:55 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 14:57:55.048 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 14:57:55 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 15:02:49.398 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:02:49 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 15:02:49.400 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:02:49 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 15:03:39.401 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:03:39 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 15:03:39.402 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:03:39 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 15:07:49.391 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:07:49 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 15:07:49.393 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:07:49 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 15:08:41.770 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 15:08:43.983 febs [Thread-18] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - stopped toiletMqttInbound
2025-07-14 15:08:43.983 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 15:08:43.984 febs [Thread-18] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 0 subscriber(s).
2025-07-14 15:08:43.984 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped _org.springframework.integration.errorLogger
2025-07-14 15:08:43.984 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 15:08:43.984 febs [Thread-18] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 0 subscriber(s).
2025-07-14 15:08:43.984 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 15:08:43.984 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 15:08:43.984 febs [Thread-18] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 0 subscriber(s).
2025-07-14 15:08:43.984 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 15:08:43.985 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2025-07-14 15:08:43.986 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2025-07-14 15:08:43.986 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-07-14 15:08:43.986 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 15:08:43.986 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-07-14 15:08:43.993 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2025-07-14 15:08:43.995 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2025-07-14 15:08:43.995 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2025-07-14 15:08:43.998 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2025-07-14 15:08:51.119 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 31800 (F:\TMSmanager\backend\target\classes started by 江西杰联医疗设备有限公司 in F:\TMSmanager\backend)
2025-07-14 15:08:51.121 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-14 15:08:51.746 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-14 15:08:51.747 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-14 15:08:51.775 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
2025-07-14 15:08:51.947 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-14 15:08:51.954 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-14 15:08:51.990 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$93fe1c0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.065 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.120 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6e4d67b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.125 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.128 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.135 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4bef6e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$703ef88b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.199 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$6903afdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.245 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.247 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.297 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.302 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$564652f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.304 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.307 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$4287637c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.313 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.314 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.315 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-14 15:08:52.319 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-14 15:08:52.493 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-14 15:08:52.493 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-14 15:08:52.493 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-14 15:08:52.493 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-14 15:08:52.493 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.501 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.506 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.871 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.874 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.876 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.877 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.890 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.891 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.896 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.896 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.897 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.921 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.933 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.948 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.949 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.951 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.966 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.967 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.986 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.987 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:52.989 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.006 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.007 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.008 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.018 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.035 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$60527673] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.037 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$129f388c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.039 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$cdb61e7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.044 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.046 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.049 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$f48195a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.053 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.054 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$425e1402] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.062 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.063 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.066 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.068 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.083 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.091 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.095 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.096 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.101 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.111 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.118 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$6fb0b211] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.127 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:08:53.350 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-14 15:08:53.357 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-14 15:08:53.361 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-14 15:08:53.361 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-14 15:08:53.365 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-14 15:08:53.444 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-14 15:08:53.444 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2279 ms
2025-07-14 15:08:53.789 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-14 15:08:53.789 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-14 15:08:53.789 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-14 15:08:53.789 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-14 15:08:53.789 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-14 15:08:53.789 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-14 15:08:53.789 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-14 15:08:53.790 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-14 15:08:54.449 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-14 15:08:55.291 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-14 15:08:55.302 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-14 15:08:55.302 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-14 15:08:55.303 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-14 15:08:55.303 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-14 15:08:55.303 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-14 15:08:55.303 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-14 15:08:55.303 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@4e4bfd9c
2025-07-14 15:08:55.319 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-14 15:08:55.354 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-14 15:08:55.508 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 15:08:55.508 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-14 15:08:55.508 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-14 15:08:55.509 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 15:08:55.509 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-14 15:08:55.509 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 15:08:55.509 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 15:08:55.509 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-14 15:08:55.509 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 15:08:56.410 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-14 15:08:56.410 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-14 15:08:56.410 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-14 15:08:56.433 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-14 15:08:56.440 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-14 15:08:56.451 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-14 15:08:56.452 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 5.625 seconds (JVM running for 6.229)
2025-07-14 15:08:56.458 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-14 15:08:56.466 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-14 15:08:56.467 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-14 15:08:56.477 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-14 15:08:56.477 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 15:08:56.489 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:08:56.500 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 15:08:56.535 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2025-07-14 15:08:56.543 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2025-07-14 15:08:56.553 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-14 15:08:56.556 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:08:56.558 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2025-07-14 15:08:56.560 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2025-07-14 15:08:56.562 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-14 15:08:56.565 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:08:56.566 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 15:08:56.567 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2025-07-14 15:08:56.568 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2025-07-14 15:08:56.569 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 15:08:56.570 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2025-07-14 15:08:56.570 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-14 15:08:56.572 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:08:56.573 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2025-07-14 15:08:56.575 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2025-07-14 15:08:56.575 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2025-07-14 15:08:56.577 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:08:56.579 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-14 15:08:56.581 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-14 15:08:56.582 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2025-07-14 15:08:56.583 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '1111' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:08:56.585 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '1111';
2025-07-14 15:08:56.586 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '1111' and m.perms is not null and m.perms <> '';
2025-07-14 15:08:56.587 febs [main] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2025-07-14 15:08:56.588 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-14 15:08:56.588 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-14 15:08:56.588 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-14 15:08:56.588 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-14 15:08:56.588 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-14T15:08:56.588
2025-07-14 15:08:56.882 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-14 15:08:56.882 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-14 15:08:56.890 febs [RMI TCP Connection(1)-192.168.10.15] INFO  p6spy - 2025-07-14 15:08:56 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-14 15:08:56.893 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2025-07-14 15:09:02.083 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 15:09:02.087 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 15:09:02.089 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 15:09:02.091 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 15:09:02.096 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 15:09:02.098 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 15:09:02.101 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 15:09:02.103 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 15:09:02.105 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 15:09:02.106 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 15:09:02.109 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 15:09:02.116 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 1 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 15:09:02.176 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 15:09:02.178 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 15:09:02.180 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 15:09:02.182 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 15:09:02.185 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:09:02 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 15:10:45.448 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 15:10:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-14 15:10:45.453 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 15:10:45 | 耗时 1 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-14 15:10:58.309 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 15:11:00.512 febs [Thread-17] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - stopped toiletMqttInbound
2025-07-14 15:11:00.512 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 15:11:00.512 febs [Thread-17] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 0 subscriber(s).
2025-07-14 15:11:00.512 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped _org.springframework.integration.errorLogger
2025-07-14 15:11:00.512 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 15:11:00.513 febs [Thread-17] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 0 subscriber(s).
2025-07-14 15:11:00.513 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 15:11:00.513 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 15:11:00.513 febs [Thread-17] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 0 subscriber(s).
2025-07-14 15:11:00.513 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 15:11:00.514 febs [Thread-17] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2025-07-14 15:11:00.514 febs [Thread-17] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2025-07-14 15:11:00.514 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-07-14 15:11:00.514 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 15:11:00.514 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-07-14 15:11:00.521 febs [Thread-17] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2025-07-14 15:11:00.523 febs [Thread-17] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2025-07-14 15:11:00.523 febs [Thread-17] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2025-07-14 15:11:00.526 febs [Thread-17] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2025-07-14 15:43:37.686 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 6332 (F:\TMSmanager\backend\target\classes started by 江西杰联医疗设备有限公司 in F:\TMSmanager\backend)
2025-07-14 15:43:37.688 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-14 15:43:38.463 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-14 15:43:38.464 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-14 15:43:38.497 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
2025-07-14 15:43:38.670 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-14 15:43:38.680 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-14 15:43:38.714 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$b4c2a887] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:38.796 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:38.854 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8f11f42b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:38.858 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:38.860 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:38.866 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2583835a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:38.876 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$91038503] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:38.927 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$89c83c57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:38.939 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:38.941 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.033 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.037 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$770adf69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.039 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.043 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$634beff4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.048 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.049 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.050 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-14 15:43:39.055 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-14 15:43:39.284 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-14 15:43:39.284 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-14 15:43:39.284 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-14 15:43:39.284 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-14 15:43:39.284 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.291 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.296 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.781 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.785 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.786 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.787 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.800 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.800 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.804 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.805 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.806 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.829 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.841 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.855 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.856 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.857 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.870 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.871 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.885 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.886 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.888 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.903 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.904 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy126] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.904 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.913 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.926 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$811702eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.928 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$3363c504] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.930 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$ee7aaaf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.934 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.938 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$15462221] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.942 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.943 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$6322a07a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.950 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.951 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.954 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.956 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.969 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.976 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.978 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.979 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.984 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.992 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:39.999 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$90753e89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:40.008 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:43:40.237 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-14 15:43:40.245 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-14 15:43:40.248 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-14 15:43:40.249 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-14 15:43:40.252 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-14 15:43:40.351 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-14 15:43:40.351 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2615 ms
2025-07-14 15:43:40.830 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-14 15:43:40.830 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-14 15:43:40.830 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-14 15:43:40.830 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-14 15:43:40.830 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-14 15:43:40.830 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-14 15:43:40.830 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-14 15:43:40.830 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-14 15:43:41.527 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-14 15:43:42.350 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-14 15:43:42.357 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-14 15:43:42.357 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-14 15:43:42.358 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-14 15:43:42.358 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-14 15:43:42.358 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-14 15:43:42.358 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-14 15:43:42.358 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@4aa517c3
2025-07-14 15:43:42.373 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-14 15:43:42.405 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-14 15:43:42.554 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 15:43:42.555 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-14 15:43:42.555 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-14 15:43:42.555 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 15:43:42.555 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-14 15:43:42.555 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 15:43:42.555 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 15:43:42.555 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-14 15:43:42.555 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 15:43:43.397 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-14 15:43:43.398 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-14 15:43:43.398 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-14 15:43:43.426 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-14 15:43:43.433 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-14 15:43:43.443 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-14 15:43:43.444 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.104 seconds (JVM running for 6.671)
2025-07-14 15:43:43.450 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-14 15:43:43.458 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-14 15:43:43.458 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-14 15:43:43.469 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 2 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 15:43:43.469 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-14 15:43:43.483 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 4 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:43:43.492 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 1 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 15:43:43.526 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2025-07-14 15:43:43.535 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2025-07-14 15:43:43.545 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-14 15:43:43.549 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:43:43.551 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2025-07-14 15:43:43.552 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2025-07-14 15:43:43.554 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-14 15:43:43.556 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 15:43:43.556 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:43:43.558 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2025-07-14 15:43:43.558 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 15:43:43.559 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2025-07-14 15:43:43.560 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-14 15:43:43.561 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2025-07-14 15:43:43.562 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:43:43.564 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2025-07-14 15:43:43.565 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2025-07-14 15:43:43.566 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2025-07-14 15:43:43.568 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:43:43.569 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-14 15:43:43.570 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-14 15:43:43.571 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2025-07-14 15:43:43.572 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '1111' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:43:43.573 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '1111';
2025-07-14 15:43:43.574 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '1111' and m.perms is not null and m.perms <> '';
2025-07-14 15:43:43.575 febs [main] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2025-07-14 15:43:43.576 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-14 15:43:43.576 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-14 15:43:43.576 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-14 15:43:43.576 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-14 15:43:43.576 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-14T15:43:43.576
2025-07-14 15:43:43.642 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-14 15:43:43.643 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-14 15:43:43.663 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 20 ms
2025-07-14 15:43:43.685 febs [RMI TCP Connection(2)-192.168.10.15] INFO  p6spy - 2025-07-14 15:43:43 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-14 15:44:41.024 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:44:41 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 15:44:41.026 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:44:41 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 15:44:41.027 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:44:41 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 15:44:41.030 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:44:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 15:44:41.035 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:44:41 | 耗时 1 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 15:44:41.037 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:44:41 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 15:44:41.038 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:44:41 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 15:44:41.039 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:44:41 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 15:44:41.042 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:44:41 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 15:44:41.044 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:44:41 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 15:44:41.050 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:44:41 | 耗时 1 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 15:45:05.132 febs [http-nio-9527-exec-8] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-14 15:45:05.245 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-14 15:45:05.286 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 15:45:05.301 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.DELETE_MARK = 0 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2025-07-14 15:45:05.493 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 15:45:05.493 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 15:45:05.495 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 15:45:05.497 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 15:45:05.497 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 15:45:05.499 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 15:45:05.500 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 15:45:05.502 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 15:45:05.502 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 15:45:05.504 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 1 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 15:45:05.504 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 15:45:05.506 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 15:45:05.506 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 15:45:05.508 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 15:45:05.510 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 15:45:05.512 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 15:45:05.515 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 15:45:05 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 15:48:43.433 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:48:43 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 15:48:43.435 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:48:43 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 15:49:33.428 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:49:33 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 15:49:33.429 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:49:33 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 15:52:48.554 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 15:52:50.742 febs [Thread-17] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - stopped toiletMqttInbound
2025-07-14 15:52:50.742 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 15:52:50.743 febs [Thread-17] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 0 subscriber(s).
2025-07-14 15:52:50.743 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped _org.springframework.integration.errorLogger
2025-07-14 15:52:50.743 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 15:52:50.743 febs [Thread-17] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 0 subscriber(s).
2025-07-14 15:52:50.743 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 15:52:50.743 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 15:52:50.743 febs [Thread-17] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 0 subscriber(s).
2025-07-14 15:52:50.743 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 15:52:50.744 febs [Thread-17] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2025-07-14 15:52:50.744 febs [Thread-17] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2025-07-14 15:52:50.744 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-07-14 15:52:50.744 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 15:52:50.744 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-07-14 15:52:50.759 febs [Thread-17] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2025-07-14 15:52:50.762 febs [Thread-17] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2025-07-14 15:52:50.762 febs [Thread-17] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2025-07-14 15:52:50.765 febs [Thread-17] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2025-07-14 15:52:53.966 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 23076 (F:\TMSmanager\backend\target\classes started by 江西杰联医疗设备有限公司 in F:\TMSmanager\backend)
2025-07-14 15:52:53.968 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-14 15:52:54.574 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-14 15:52:54.575 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-14 15:52:54.600 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18ms. Found 0 repository interfaces.
2025-07-14 15:52:54.758 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-14 15:52:54.765 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-14 15:52:54.799 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$800e92a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:54.878 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:54.934 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5a5dde45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:54.940 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:54.942 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:54.948 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f0cf6d74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:54.965 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$5c4f6f1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.011 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$55142671] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.057 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.059 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.113 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.118 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$4256c983] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.120 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.124 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$2e97da0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.130 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.130 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.132 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-14 15:52:55.137 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-14 15:52:55.340 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-14 15:52:55.340 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-14 15:52:55.340 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-14 15:52:55.340 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-14 15:52:55.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.347 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.731 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.735 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.736 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.737 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.752 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.752 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.757 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.758 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.759 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.783 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.796 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.813 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.814 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.815 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.831 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.832 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.849 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.850 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.852 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.870 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.871 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy126] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.873 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.882 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.898 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$4c62ed05] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.900 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$feafaf1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.902 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$b9c6950d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.907 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.908 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.912 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$e0920c3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.916 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.918 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$2e6e8a94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.925 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.926 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.929 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.931 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.949 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.956 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.959 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.960 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.965 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.972 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.978 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$5bc128a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:55.986 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 15:52:56.210 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-14 15:52:56.219 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-14 15:52:56.222 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-14 15:52:56.222 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-14 15:52:56.226 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-14 15:52:56.306 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-14 15:52:56.307 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2319 ms
2025-07-14 15:52:56.646 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-14 15:52:56.646 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-14 15:52:56.646 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-14 15:52:56.646 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-14 15:52:56.646 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-14 15:52:56.646 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-14 15:52:56.646 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-14 15:52:56.647 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-14 15:52:57.306 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-14 15:52:58.103 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-14 15:52:58.109 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-14 15:52:58.109 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-14 15:52:58.109 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-14 15:52:58.110 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-14 15:52:58.110 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-14 15:52:58.110 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-14 15:52:58.110 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@21688427
2025-07-14 15:52:58.124 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-14 15:52:58.159 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-14 15:52:58.319 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 15:52:58.319 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-14 15:52:58.319 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-14 15:52:58.319 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 15:52:58.319 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-14 15:52:58.319 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 15:52:58.319 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 15:52:58.319 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-14 15:52:58.319 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 15:52:59.138 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-14 15:52:59.138 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-14 15:52:59.138 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-14 15:52:59.162 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-14 15:52:59.169 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-14 15:52:59.179 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-14 15:52:59.180 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 5.552 seconds (JVM running for 6.091)
2025-07-14 15:52:59.186 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-14 15:52:59.193 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-14 15:52:59.193 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-14 15:52:59.214 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 15:52:59.214 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-14 15:52:59.225 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:52:59.225 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 15:52:59.234 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 15:52:59.239 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 15:52:59.265 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2025-07-14 15:52:59.273 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2025-07-14 15:52:59.282 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-14 15:52:59.285 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:52:59.287 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2025-07-14 15:52:59.289 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2025-07-14 15:52:59.291 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-14 15:52:59.293 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:52:59.294 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2025-07-14 15:52:59.296 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2025-07-14 15:52:59.298 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2025-07-14 15:52:59.299 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:52:59.301 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2025-07-14 15:52:59.302 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-14 15:52:59.302 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2025-07-14 15:52:59.303 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2025-07-14 15:52:59.305 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:52:59.306 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-14 15:52:59.307 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-14 15:52:59.308 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2025-07-14 15:52:59.309 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '1111' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 15:52:59.311 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '1111';
2025-07-14 15:52:59.312 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '1111' and m.perms is not null and m.perms <> '';
2025-07-14 15:52:59.313 febs [main] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2025-07-14 15:52:59.313 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-14 15:52:59.313 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-14 15:52:59.313 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-14 15:52:59.313 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-14 15:52:59.313 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-14T15:52:59.313
2025-07-14 15:52:59.854 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-14 15:52:59.854 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-14 15:52:59.867 febs [RMI TCP Connection(1)-192.168.10.15] INFO  p6spy - 2025-07-14 15:52:59 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-14 15:52:59.871 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2025-07-14 15:53:06.316 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-14 15:53:06 | 耗时 1 ms | SQL 语句：
SELECT id,hospital_id,department_id,name,id_card,gender,birthday,his_id,code,created_by,created_at,updated_by,updated_at FROM patient;
2025-07-14 15:57:59.167 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:57:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 15:57:59.169 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:57:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 15:58:49.176 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:58:49 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 15:58:49.178 febs [scheduling-1] INFO  p6spy - 2025-07-14 15:58:49 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 16:02:59.169 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:02:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 16:02:59.171 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:02:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 16:04:39.170 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:04:39 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 16:04:39.172 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:04:39 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 16:07:59.162 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:07:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 16:07:59.164 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:07:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 16:10:29.164 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:10:29 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 16:10:29.167 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:10:29 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 16:12:59.172 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:12:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 16:12:59.174 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:12:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 16:16:19.175 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:16:19 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 16:16:19.176 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:16:19 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 16:17:59.171 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:17:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 16:17:59.174 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:17:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 16:18:04.552 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 16:18:04 | 耗时 5 ms | SQL 语句：
INSERT INTO patient ( id, hospital_id, department_id, name, id_card, gender, birthday, his_id, code, created_by, created_at, updated_by, updated_at ) VALUES ( 1944672733278162945, 1, 1, '李四', '123456789012345678', 'M', '1990-01-01T00:00:00.000+0800', 'HIS123456', 'CODE123456', 1, '1990-01-01T00:00:00.000+0800', 1, '1990-01-01T00:00:00.000+0800' );
2025-07-14 16:21:29.073 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-14 16:21:29 | 耗时 0 ms | SQL 语句：
UPDATE patient SET hospital_id=1, department_id=1, name='李四', id_card='123456789012345678', gender='N', birthday='1990-01-01T00:00:00.000+0800', his_id='HIS123456', code='CODE123456', created_by=1, created_at='1990-01-01T00:00:00.000+0800', updated_by=1, updated_at='1990-01-01T00:00:00.000+0800' WHERE id=NULL;
2025-07-14 16:22:09.166 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:22:09 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 16:22:09.168 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:22:09 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 16:22:52.335 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 16:22:52 | 耗时 6 ms | SQL 语句：
UPDATE patient SET hospital_id=1, department_id=1, name='李四', id_card='123456789012345678', gender='N', birthday='1990-01-01T00:00:00.000+0800', his_id='HIS123456', code='CODE123456', created_by=1, created_at='1990-01-01T00:00:00.000+0800', updated_by=1, updated_at='1990-01-01T00:00:00.000+0800' WHERE id=1;
2025-07-14 16:22:59.176 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:22:59 | 耗时 2 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 16:22:59.178 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:22:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 16:26:58.429 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 16:26:58 | 耗时 4 ms | SQL 语句：
DELETE FROM patient WHERE id=1944672733278162945;
2025-07-14 16:27:59.178 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:27:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 16:27:59.179 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:27:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 16:27:59.180 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:27:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 16:27:59.182 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:27:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 16:32:59.170 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:32:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 16:32:59.172 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:32:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 16:33:49.174 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:33:49 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 16:33:49.175 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:33:49 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 16:37:59.164 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:37:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 16:37:59.166 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:37:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 16:39:39.164 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:39:39 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 16:39:39.166 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:39:39 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 16:42:59.170 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:42:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 16:42:59.172 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:42:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 16:45:29.187 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:45:29 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 16:45:29.189 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:45:29 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 16:47:59.171 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:47:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 16:47:59.173 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:47:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 16:48:18.785 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 16:48:18 | 耗时 5 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 16:48:18.800 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 16:48:18 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 16:48:18.806 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 16:48:18 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 16:48:18.809 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 16:48:18 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 16:48:18.820 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 16:48:18 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 16:48:18.822 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 16:48:18 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 16:48:18.823 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 16:48:18 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 16:48:18.825 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 16:48:18 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 16:48:18.828 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 16:48:18 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 16:48:18.834 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 16:48:18 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 16:48:18.853 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 16:48:18 | 耗时 1 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 16:48:25.576 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-14 16:48:25.799 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 16:48:25 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-14 16:48:25.850 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 16:48:25.874 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 16:48:25 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.DELETE_MARK = 0 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2025-07-14 16:48:25.998 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 16:48:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 16:48:26.000 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 16:48:26.001 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 16:48:26.003 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 16:48:26.009 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 16:48:26.009 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 16:48:26.011 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 16:48:26.011 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 16:48:26.015 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 16:48:26.015 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 1 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 16:48:26.018 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 1 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 16:48:26.018 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 16:48:26.020 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 16:48:26.020 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 16:48:26.025 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 2 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 16:48:26.028 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 16:48:26.032 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 16:48:26 | 耗时 1 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 16:48:41.404 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 16:48:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-14 16:48:41.409 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 16:48:41 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-14 16:48:44.260 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 16:48:44.262 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 16:48:44.262 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 16:48:44.264 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 16:48:44.266 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 16:48:44.266 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 16:48:44.268 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 16:48:44.269 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 16:48:44.271 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 16:48:44.271 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 16:48:44.272 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 16:48:44.272 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 16:48:44.274 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 16:48:44.274 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 16:48:44.275 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 16:48:44.277 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 16:48:44.279 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 16:48:44 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 16:51:19.165 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:51:19 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 16:51:19.168 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:51:19 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 16:52:59.174 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:52:59 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 16:52:59.176 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:52:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 16:52:59.196 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-14 16:57:09.164 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:57:09 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 16:57:09.166 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:57:09 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 16:57:59.172 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:57:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 16:57:59.175 febs [scheduling-1] INFO  p6spy - 2025-07-14 16:57:59 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 17:01:36.825 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 17:01:39.039 febs [Thread-17] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - stopped toiletMqttInbound
2025-07-14 17:01:39.048 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 17:01:39.049 febs [Thread-17] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 0 subscriber(s).
2025-07-14 17:01:39.049 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped _org.springframework.integration.errorLogger
2025-07-14 17:01:39.049 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 17:01:39.049 febs [Thread-17] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 0 subscriber(s).
2025-07-14 17:01:39.049 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 17:01:39.049 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 17:01:39.049 febs [Thread-17] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 0 subscriber(s).
2025-07-14 17:01:39.049 febs [Thread-17] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 17:01:39.053 febs [Thread-17] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2025-07-14 17:01:39.054 febs [Thread-17] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2025-07-14 17:01:39.054 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-07-14 17:01:39.054 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 17:01:39.054 febs [Thread-17] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-07-14 17:01:39.069 febs [Thread-17] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2025-07-14 17:01:39.075 febs [Thread-17] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2025-07-14 17:01:39.076 febs [Thread-17] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2025-07-14 17:01:39.080 febs [Thread-17] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
