2025-07-14 11:04:11.153 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 31532 (F:\TMSmanager\backend\target\classes started by 江西杰联医疗设备有限公司 in F:\TMSmanager\backend)
2025-07-14 11:04:11.156 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-14 11:04:12.774 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-14 11:04:12.775 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-14 11:04:12.800 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18ms. Found 0 repository interfaces.
2025-07-14 11:04:12.960 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-14 11:04:12.968 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-14 11:04:13.001 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$7ca7bb4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.082 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.141 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$56f706f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.147 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.149 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.155 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed689622] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.165 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$58e897cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.208 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$51ad4f1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.262 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.264 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.323 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$3eeff231] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$2b3102bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.339 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.341 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-14 11:04:13.345 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-14 11:04:13.523 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-14 11:04:13.524 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-14 11:04:13.524 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-14 11:04:13.524 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-14 11:04:13.524 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.531 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:13.537 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.108 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.112 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.114 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.115 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.127 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.128 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.131 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.132 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.133 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.155 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.167 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.182 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.182 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.184 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.199 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.215 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.216 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.218 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.234 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.235 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.236 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.244 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.258 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$48fc15b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.261 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$fb48d7cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.262 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$b65fbdbb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.267 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.269 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$dd2b34e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.277 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$2b07b342] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.285 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.287 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.291 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.304 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.311 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.314 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.314 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$585a5151] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-14 11:04:14.555 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-14 11:04:14.562 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-14 11:04:14.564 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-14 11:04:14.565 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-14 11:04:14.568 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-14 11:04:14.644 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-14 11:04:14.644 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3448 ms
2025-07-14 11:04:14.995 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-14 11:04:14.995 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-14 11:04:14.996 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-14 11:04:14.996 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-14 11:04:14.996 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-14 11:04:14.996 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-14 11:04:14.996 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-14 11:04:14.996 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-14 11:04:15.652 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-14 11:04:16.425 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-14 11:04:16.431 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-14 11:04:16.431 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-14 11:04:16.431 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-14 11:04:16.432 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-14 11:04:16.432 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-14 11:04:16.432 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-14 11:04:16.432 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@4bdef487
2025-07-14 11:04:16.446 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-14 11:04:16.478 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-14 11:04:16.624 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 11:04:16.624 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-14 11:04:16.625 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-14 11:04:16.625 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 11:04:16.625 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-14 11:04:16.625 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 11:04:16.625 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 11:04:16.625 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-14 11:04:16.625 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 11:04:17.368 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-14 11:04:17.368 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-14 11:04:17.368 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-14 11:04:17.387 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-14 11:04:17.394 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-14 11:04:17.404 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-14 11:04:17.405 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.544 seconds (JVM running for 7.049)
2025-07-14 11:04:17.411 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-14 11:04:17.418 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-14 11:04:17.418 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-14 11:04:17.436 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 8 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 11:04:17.436 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 8 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-14 11:04:17.448 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 11:04:17.457 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 11:04:17.488 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2025-07-14 11:04:17.496 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2025-07-14 11:04:17.505 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-14 11:04:17.508 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 11:04:17.510 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2025-07-14 11:04:17.512 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2025-07-14 11:04:17.512 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 11:04:17.514 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-14 11:04:17.514 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 11:04:17.515 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 11:04:17.516 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-14 11:04:17.517 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2025-07-14 11:04:17.518 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2025-07-14 11:04:17.520 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2025-07-14 11:04:17.521 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 11:04:17.523 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2025-07-14 11:04:17.524 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2025-07-14 11:04:17.525 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2025-07-14 11:04:17.526 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 11:04:17.527 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-14 11:04:17.529 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-14 11:04:17.530 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2025-07-14 11:04:17.531 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '1111' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-14 11:04:17.532 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '1111';
2025-07-14 11:04:17.533 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '1111' and m.perms is not null and m.perms <> '';
2025-07-14 11:04:17.534 febs [main] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2025-07-14 11:04:17.535 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-14 11:04:17.535 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-14 11:04:17.535 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-14 11:04:17.535 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-14 11:04:17.535 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-14T11:04:17.535
2025-07-14 11:04:17.921 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-14 11:04:17.922 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-14 11:04:17.943 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2025-07-14 11:04:17.951 febs [RMI TCP Connection(2)-192.168.10.15] INFO  p6spy - 2025-07-14 11:04:17 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-14 11:05:16.718 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 11:05:16.720 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 11:05:16.723 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 11:05:16.725 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 11:05:16.731 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 11:05:16.732 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 11:05:16.733 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 11:05:16.734 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 11:05:16.739 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 3 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 11:05:16.740 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 11:05:16.741 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 11:05:16.747 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 1 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 11:05:16.798 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 11:05:16.799 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 11:05:16.801 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 11:05:16.802 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 11:05:16.805 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:05:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 11:05:25.736 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 11:05:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-14 11:05:25.740 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 11:05:25 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-14 11:05:46.228 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:05:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM device_type WHERE 1 = 1;
2025-07-14 11:05:46.230 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:05:46 | 耗时 1 ms | SQL 语句：
select id, code, name, remark, create_date, images from device_type where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-14 11:05:52.313 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:05:52 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM operate_record_info ori LEFT JOIN device_info di ON (di.id = ori.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:05:52.314 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:05:52 | 耗时 0 ms | SQL 语句：
select ori.id, ori.device_id, ori.open_flag, ori.device_value, ori.device_old_value, ori.create_date, di.code as deviceCode, di.name as deviceName, di.remark, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from operate_record_info ori left join device_info di on (di.id = ori.device_id) left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by ori.create_date desc LIMIT 0,10;
2025-07-14 11:05:55.591 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:55 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM device_offline_record dor LEFT JOIN device_info di ON (di.id = dor.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:05:55.592 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:05:55 | 耗时 0 ms | SQL 语句：
select dor.id, dor.device_id, dor.online_date, dor.offline, dor.type, di.code as deviceCode, di.name as deviceName, di.remark, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_offline_record dor left join device_info di on (di.id = dor.device_id) left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by dor.online_date desc LIMIT 0,10;
2025-07-14 11:05:57.665 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 11:05:57 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM message_info LEFT JOIN user_info ON (user_info.id = message_info.send_user) WHERE 1 = 1;
2025-07-14 11:05:57.666 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 11:05:57 | 耗时 0 ms | SQL 语句：
select message_info.id, message_info.send_user, message_info.content, message_info.create_date, message_info.read_status, user_info.name as userName, user_info.images as userImages from message_info left join user_info on (user_info.id = message_info.send_user) where 1 = 1 order by message_info.create_date desc LIMIT 0,10;
2025-07-14 11:06:00.701 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:06:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_history_info dhi LEFT JOIN device_info di ON (di.id = dhi.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:06:00.703 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:06:00 | 耗时 1 ms | SQL 语句：
select dhi.id, dhi.device_id, dhi.device_value, dhi.alert_value, dhi.create_date, di.code as deviceCode, di.name as deviceName, di.remark, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_history_info dhi left join device_info di on (di.id = dhi.device_id) left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by dhi.create_date desc LIMIT 0,10;
2025-07-14 11:06:02.201 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-14 11:06:02 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,remark,create_date,images FROM device_type;
2025-07-14 11:06:02.207 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 11:06:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:06:02.209 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 11:06:02 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,10;
2025-07-14 11:06:05.526 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:06:05 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM bulletin_info bi WHERE 1 = 1;
2025-07-14 11:06:05.528 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:06:05 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.title, bi.content, bi.images, bi.date AS createDate, bi.publisher, bi.rack_up AS rackUp, bi.type FROM bulletin_info bi WHERE 1 = 1 ORDER BY bi.date DESC LIMIT 0,10;
2025-07-14 11:06:07.638 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:07 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 11:06:07.644 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 11:06:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_alert_info LEFT JOIN device_info ON (device_info.id = device_alert_info.device_id) LEFT JOIN device_type ON (device_type.id = device_info.type_id) LEFT JOIN user_info ON (user_info.id = device_info.user_id) WHERE 1 = 1;
2025-07-14 11:06:07.645 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 11:06:07 | 耗时 0 ms | SQL 语句：
select device_alert_info.id, device_alert_info.device_id, device_alert_info.device_type_id, device_alert_info.`type`, device_alert_info.score, device_alert_info.create_date, device_alert_info.remark, device_info.code as deviceCode, device_info.name as deviceName, device_info.remark, device_type.name as typeName, device_type.images, user_info.name as userName, user_info.images as userImages from device_alert_info left join device_info on (device_info.id = device_alert_info.device_id) left join device_type on (device_type.id = device_info.type_id) left join user_info on (user_info.id = device_info.user_id) where 1 = 1 order by device_alert_info.create_date desc LIMIT 0,10;
2025-07-14 11:06:10.564 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 11:06:10 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:06:10.565 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 11:06:10 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,500;
2025-07-14 11:06:12.112 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:06:12 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:06:12.113 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-14 11:06:12 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,36;
2025-07-14 11:06:23.540 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-14 11:06:23.540 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-14 11:06:23.542 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-14 11:06:23.545 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-14 11:06:23.545 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-14 11:06:23.546 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-14 11:06:23.546 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-14 11:06:23.547 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-14 11:06:23.547 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-14 11:06:23.548 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-14 11:06:23.548 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-14 11:06:23.550 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-14 11:06:23.550 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-14 11:06:23.550 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-14 11:06:23.552 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 11:06:23.553 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-14 11:06:23.555 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:23 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-14 11:06:26.896 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-14 11:06:26 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 11:06:26.908 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 11:06:26 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM device_alert_info LEFT JOIN device_info ON (device_info.id = device_alert_info.device_id) LEFT JOIN device_type ON (device_type.id = device_info.type_id) LEFT JOIN user_info ON (user_info.id = device_info.user_id) WHERE 1 = 1;
2025-07-14 11:06:26.910 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-14 11:06:26 | 耗时 1 ms | SQL 语句：
select device_alert_info.id, device_alert_info.device_id, device_alert_info.device_type_id, device_alert_info.`type`, device_alert_info.score, device_alert_info.create_date, device_alert_info.remark, device_info.code as deviceCode, device_info.name as deviceName, device_info.remark, device_type.name as typeName, device_type.images, user_info.name as userName, user_info.images as userImages from device_alert_info left join device_info on (device_info.id = device_alert_info.device_id) left join device_type on (device_type.id = device_info.type_id) left join user_info on (user_info.id = device_info.user_id) where 1 = 1 order by device_alert_info.create_date desc LIMIT 0,10;
2025-07-14 11:06:27.889 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:06:27 | 耗时 9 ms | SQL 语句：
SELECT COUNT(1) FROM bulletin_info bi WHERE 1 = 1;
2025-07-14 11:06:27.890 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-14 11:06:27 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.title, bi.content, bi.images, bi.date AS createDate, bi.publisher, bi.rack_up AS rackUp, bi.type FROM bulletin_info bi WHERE 1 = 1 ORDER BY bi.date DESC LIMIT 0,10;
2025-07-14 11:06:30.570 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:06:30.572 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-14 11:06:30 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,500;
2025-07-14 11:06:31.697 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 11:06:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-14 11:06:31.699 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-14 11:06:31 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,36;
2025-07-14 11:09:17.402 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:09:17 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 11:09:17.403 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:09:17 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 11:10:07.400 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:10:07 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 11:10:07.401 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:10:07 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 11:14:17.391 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:14:17 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-14 11:14:17.393 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:14:17 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-14 11:15:57.398 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:15:57 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-14 11:15:57.401 febs [scheduling-1] INFO  p6spy - 2025-07-14 11:15:57 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-14 11:19:07.226 febs [Thread-16] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 11:19:09.431 febs [Thread-16] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - stopped toiletMqttInbound
2025-07-14 11:19:09.431 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-14 11:19:09.431 febs [Thread-16] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 0 subscriber(s).
2025-07-14 11:19:09.431 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped _org.springframework.integration.errorLogger
2025-07-14 11:19:09.431 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-14 11:19:09.431 febs [Thread-16] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 0 subscriber(s).
2025-07-14 11:19:09.432 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-14 11:19:09.432 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-14 11:19:09.432 febs [Thread-16] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 0 subscriber(s).
2025-07-14 11:19:09.432 febs [Thread-16] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-14 11:19:09.433 febs [Thread-16] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2025-07-14 11:19:09.433 febs [Thread-16] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2025-07-14 11:19:09.433 febs [Thread-16] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-07-14 11:19:09.433 febs [Thread-16] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-14 11:19:09.433 febs [Thread-16] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-07-14 11:19:09.438 febs [Thread-16] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2025-07-14 11:19:09.441 febs [Thread-16] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2025-07-14 11:19:09.441 febs [Thread-16] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2025-07-14 11:19:09.447 febs [Thread-16] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
