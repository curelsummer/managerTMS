2025-07-11 15:18:01.957 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 25260 (started by 江西杰联医疗设备有限公司 in F:\manager\20240725智能家居管理系统\backend)
2025-07-11 15:18:01.958 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-11 15:18:03.761 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-11 15:18:03.763 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-11 15:18:03.794 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20ms. Found 0 repository interfaces.
2025-07-11 15:18:03.989 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-11 15:18:04.000 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-11 15:18:04.040 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$efc0c93b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.137 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.203 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ca1014df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.210 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.213 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.220 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6081a40e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.264 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$cc01a5b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$c4c65d0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.377 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.379 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.452 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.459 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$b209001d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.462 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.467 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$9e4a10a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.474 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.476 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:18:04.478 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-11 15:18:04.485 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-11 15:18:05.747 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-07-11 15:19:44.163 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 176 (started by 江西杰联医疗设备有限公司 in F:\manager\20240725智能家居管理系统\backend)
2025-07-11 15:19:44.164 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-11 15:19:44.791 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-11 15:19:44.792 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-11 15:19:44.821 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20ms. Found 0 repository interfaces.
2025-07-11 15:19:45.006 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-11 15:19:45.015 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-11 15:19:45.054 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$57b1ec7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.142 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.213 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$32013820] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.252 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.255 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.261 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c872c74f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.274 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$33f2c8f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.322 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$2cb7804c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.334 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.336 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.397 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$19fa235e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.404 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$63b33e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.411 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.412 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.414 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-11 15:19:45.419 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-11 15:19:45.617 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-11 15:19:45.617 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-11 15:19:45.617 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-11 15:19:45.617 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-11 15:19:45.617 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.625 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:45.629 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.185 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.190 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.192 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.193 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.210 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.211 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.216 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.217 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.218 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.246 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.264 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.284 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.285 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.287 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.306 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.307 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.328 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.329 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.332 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.350 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.352 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.368 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.384 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$240646e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.386 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$d65308f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.388 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$9169eee8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.393 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.397 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$b8356616] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.402 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$611e46f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.412 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.413 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.416 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.418 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.431 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.438 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.441 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.441 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.446 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.455 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.462 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$3364827e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.471 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:19:46.731 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-11 15:19:46.740 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-11 15:19:46.743 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 15:19:46.743 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-11 15:19:46.747 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-11 15:19:46.834 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 15:19:46.834 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2645 ms
2025-07-11 15:19:47.253 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-11 15:19:47.253 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-11 15:19:47.253 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-11 15:19:47.253 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-11 15:19:47.253 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-11 15:19:47.253 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-11 15:19:47.253 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-11 15:19:47.253 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-11 15:19:48.019 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-11 15:19:49.007 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-11 15:19:49.016 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-11 15:19:49.016 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-11 15:19:49.017 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-11 15:19:49.017 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-11 15:19:49.017 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-11 15:19:49.017 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-11 15:19:49.017 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@351e86b2
2025-07-11 15:19:49.035 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-11 15:19:49.080 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-11 15:19:49.288 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-11 15:19:49.288 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-11 15:19:49.288 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-11 15:19:49.289 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-11 15:19:49.289 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-11 15:19:49.289 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-11 15:19:49.289 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-11 15:19:49.289 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-11 15:19:49.289 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-11 15:19:50.065 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-11 15:19:50.065 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-11 15:19:50.065 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-11 15:19:50.089 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-11 15:19:50.096 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-11 15:19:50.107 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-11 15:19:50.109 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.275 seconds (JVM running for 6.883)
2025-07-11 15:19:50.115 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-11 15:19:50.124 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-11 15:19:50.124 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-11 15:19:50.146 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-11 15:19:50.146 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-11 15:19:50.158 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-11 15:19:50.158 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-11 15:19:50.168 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-11 15:19:50.202 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2025-07-11 15:19:50.211 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2025-07-11 15:19:50.220 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-11 15:19:50.224 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-11 15:19:50.226 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2025-07-11 15:19:50.227 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2025-07-11 15:19:50.229 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-11 15:19:50.231 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-11 15:19:50.232 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2025-07-11 15:19:50.233 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2025-07-11 15:19:50.235 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2025-07-11 15:19:50.237 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-11 15:19:50.238 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2025-07-11 15:19:50.240 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2025-07-11 15:19:50.241 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2025-07-11 15:19:50.243 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-11 15:19:50.244 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-11 15:19:50.246 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-11 15:19:50.247 febs [main] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2025-07-11 15:19:50.247 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-11 15:19:50.247 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-11 15:19:50.247 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-11 15:19:50.247 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-11 15:19:50.248 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-11T15:19:50.247
2025-07-11 15:19:50.516 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-11 15:19:50.516 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-11 15:19:50.526 febs [RMI TCP Connection(2)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2025-07-11 15:19:50.528 febs [RMI TCP Connection(3)-192.168.10.15] INFO  p6spy - 2025-07-11 15:19:50 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-11 15:25:34.278 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-11 15:25:36.481 febs [Thread-18] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - stopped toiletMqttInbound
2025-07-11 15:25:36.481 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-11 15:25:36.481 febs [Thread-18] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 0 subscriber(s).
2025-07-11 15:25:36.481 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped _org.springframework.integration.errorLogger
2025-07-11 15:25:36.481 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-11 15:25:36.481 febs [Thread-18] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 0 subscriber(s).
2025-07-11 15:25:36.481 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-11 15:25:36.482 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-11 15:25:36.482 febs [Thread-18] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 0 subscriber(s).
2025-07-11 15:25:36.482 febs [Thread-18] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-11 15:25:36.483 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2025-07-11 15:25:36.483 febs [Thread-18] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2025-07-11 15:25:36.483 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-07-11 15:25:36.483 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-11 15:25:36.483 febs [Thread-18] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-07-11 15:25:36.489 febs [Thread-18] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2025-07-11 15:25:36.492 febs [Thread-18] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2025-07-11 15:25:36.492 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2025-07-11 15:25:36.504 febs [Thread-18] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2025-07-11 15:25:44.084 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-J4S0HA1 with PID 19004 (started by 江西杰联医疗设备有限公司 in F:\manager\20240725智能家居管理系统\backend)
2025-07-11 15:25:44.085 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2025-07-11 15:25:45.112 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2025-07-11 15:25:45.114 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2025-07-11 15:25:45.141 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 0 repository interfaces.
2025-07-11 15:25:45.325 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2025-07-11 15:25:45.335 febs [main] INFO  o.s.i.c.DefaultConfiguringBeanFactoryPostProcessor - No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2025-07-11 15:25:45.375 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$b9bbefe5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.469 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$940b3b89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.571 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.574 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.581 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2a7ccab8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.592 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$95fccc61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.641 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$8ec183b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.653 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.654 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.711 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.715 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$7c0426c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.718 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.722 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$68453752] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.727 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.729 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2025-07-11 15:25:45.735 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2025-07-11 15:25:45.927 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2025-07-11 15:25:45.927 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2025-07-11 15:25:45.927 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2025-07-11 15:25:45.927 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2025-07-11 15:25:45.927 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:45.940 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.331 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.334 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.353 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.354 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.358 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.359 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy116] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.359 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.386 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.423 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.424 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.425 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.440 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.441 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.456 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.457 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.459 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.475 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.476 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoMapper' of type [com.sun.proxy.$Proxy125] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.477 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.UserInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.487 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.501 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$86104a49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.504 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$385d0c62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.506 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$f373f251] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.510 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.512 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.516 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$1a3f697f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.520 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.521 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$681be7d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.530 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.532 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.535 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.537 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.551 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.559 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.562 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.562 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.567 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.577 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.584 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$956e85e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.593 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-07-11 15:25:46.845 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2025-07-11 15:25:46.854 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2025-07-11 15:25:46.858 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-11 15:25:46.858 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2025-07-11 15:25:46.862 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\江西杰联医疗设备有限公司\.jdks\corretto-1.8.0_452\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;F:\Git\cmd;D:\java\bin;D:\java\lib;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;F:\vivo\pcsuite\;D:\Git LFS;F:\Maven\apache-maven-3.8.9\bin;F:\nodejs\;;C:\Program Files\Java\jdk-17\bin;.]
2025-07-11 15:25:46.948 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-11 15:25:46.948 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2833 ms
2025-07-11 15:25:47.377 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2025-07-11 15:25:47.378 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2025-07-11 15:25:47.378 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2025-07-11 15:25:47.378 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2025-07-11 15:25:47.378 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2025-07-11 15:25:47.378 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2025-07-11 15:25:47.378 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2025-07-11 15:25:47.378 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2025-07-11 15:25:48.121 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2025-07-11 15:25:49.070 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2025-07-11 15:25:49.078 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-07-11 15:25:49.078 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2025-07-11 15:25:49.078 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2025-07-11 15:25:49.079 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-07-11 15:25:49.079 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-07-11 15:25:49.079 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2025-07-11 15:25:49.079 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@12270a01
2025-07-11 15:25:49.097 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-07-11 15:25:49.141 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2025-07-11 15:25:49.347 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-11 15:25:49.347 febs [main] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 1 subscriber(s).
2025-07-11 15:25:49.347 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2025-07-11 15:25:49.347 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-11 15:25:49.347 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 1 subscriber(s).
2025-07-11 15:25:49.347 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-11 15:25:49.347 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - Adding {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-11 15:25:49.347 febs [main] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 1 subscriber(s).
2025-07-11 15:25:49.347 febs [main] INFO  o.s.i.endpoint.EventDrivenConsumer - started deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-11 15:25:50.256 febs [main] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - started toiletMqttInbound
2025-07-11 15:25:50.256 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2025-07-11 15:25:50.256 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-07-11 15:25:50.281 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2025-07-11 15:25:50.290 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2025-07-11 15:25:50.302 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2025-07-11 15:25:50.304 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 6.563 seconds (JVM running for 7.146)
2025-07-11 15:25:50.311 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2025-07-11 15:25:50.320 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2025-07-11 15:25:50.320 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2025-07-11 15:25:50.342 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2025-07-11 15:25:50.342 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-11 15:25:50.355 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 1 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-11 15:25:50.355 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-11 15:25:50.365 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-11 15:25:50.371 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-11 15:25:50.401 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2025-07-11 15:25:50.411 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2025-07-11 15:25:50.421 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2025-07-11 15:25:50.424 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-11 15:25:50.427 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2025-07-11 15:25:50.429 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2025-07-11 15:25:50.432 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2025-07-11 15:25:50.434 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-11 15:25:50.436 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2025-07-11 15:25:50.436 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2025-07-11 15:25:50.438 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2025-07-11 15:25:50.440 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2025-07-11 15:25:50.441 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-11 15:25:50.443 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2025-07-11 15:25:50.444 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2025-07-11 15:25:50.445 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2025-07-11 15:25:50.447 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-11 15:25:50.449 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2025-07-11 15:25:50.450 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-11 15:25:50.451 febs [main] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2025-07-11 15:25:50.451 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2025-07-11 15:25:50.451 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2025-07-11 15:25:50.451 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2025-07-11 15:25:50.451 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2025-07-11 15:25:50.451 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - 启动完毕，时间：2025-07-11T15:25:50.451
2025-07-11 15:25:50.895 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-11 15:25:50.895 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-11 15:25:50.925 febs [RMI TCP Connection(2)-192.168.10.15] INFO  p6spy - 2025-07-11 15:25:50 | 耗时 10 ms | SQL 语句：
/* ping */ SELECT 1;
2025-07-11 15:25:50.945 febs [RMI TCP Connection(1)-192.168.10.15] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 50 ms
2025-07-11 15:27:14.462 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-11 15:27:14.557 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:27:14 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'test';
2025-07-11 15:27:37.242 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-11 15:27:37.246 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:27:37 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'test';
2025-07-11 15:28:16.134 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-11 15:28:16.162 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2025-07-11T15:28:16.152+0800' WHERE username = 'admin';
2025-07-11 15:28:16.163 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-11 15:28:16.191 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2025-07-11T15:28:16.173+0800', '', '127.0.0.1' );
2025-07-11 15:28:16.271 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-11 15:28:16.314 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-11 15:28:16.331 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2025-07-11 15:28:16.623 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-11 15:28:16.631 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 4 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-11 15:28:16.634 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:28:16.637 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:28:16.639 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-11 15:28:16.640 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-11 15:28:16.642 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-11 15:28:16.644 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-11 15:28:16.647 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-11 15:28:16.650 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-11 15:28:16.659 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-11 15:28:16.661 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-11 15:28:16.663 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-11 15:28:16.666 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-11 15:28:16.671 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 3 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-11 15:28:16.676 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-11 15:28:16.684 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:16 | 耗时 1 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-11 15:28:19.480 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-11 15:28:19 | 耗时 1 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-11 15:28:19.522 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM device_alert_info LEFT JOIN device_info ON (device_info.id = device_alert_info.device_id) LEFT JOIN device_type ON (device_type.id = device_info.type_id) LEFT JOIN user_info ON (user_info.id = device_info.user_id) WHERE 1 = 1;
2025-07-11 15:28:19.526 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:19 | 耗时 1 ms | SQL 语句：
select device_alert_info.id, device_alert_info.device_id, device_alert_info.device_type_id, device_alert_info.`type`, device_alert_info.score, device_alert_info.create_date, device_alert_info.remark, device_info.code as deviceCode, device_info.name as deviceName, device_info.remark, device_type.name as typeName, device_type.images, user_info.name as userName, user_info.images as userImages from device_alert_info left join device_info on (device_info.id = device_alert_info.device_id) left join device_type on (device_type.id = device_info.type_id) left join user_info on (user_info.id = device_info.user_id) where 1 = 1 order by device_alert_info.create_date desc LIMIT 0,10;
2025-07-11 15:28:20.650 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:20 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM bulletin_info bi WHERE 1 = 1;
2025-07-11 15:28:20.651 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:20 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.title, bi.content, bi.images, bi.date AS createDate, bi.publisher, bi.rack_up AS rackUp, bi.type FROM bulletin_info bi WHERE 1 = 1 ORDER BY bi.date DESC LIMIT 0,10;
2025-07-11 15:28:21.742 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:21 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,remark,create_date,images FROM device_type;
2025-07-11 15:28:21.750 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-11 15:28:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-11 15:28:21.751 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-11 15:28:21 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,10;
2025-07-11 15:28:22.593 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-11 15:28:22 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_history_info dhi LEFT JOIN device_info di ON (di.id = dhi.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-11 15:28:22.595 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-11 15:28:22 | 耗时 1 ms | SQL 语句：
select dhi.id, dhi.device_id, dhi.device_value, dhi.alert_value, dhi.create_date, di.code as deviceCode, di.name as deviceName, di.remark, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_history_info dhi left join device_info di on (di.id = dhi.device_id) left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by dhi.create_date desc LIMIT 0,10;
2025-07-11 15:28:23.905 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM message_info LEFT JOIN user_info ON (user_info.id = message_info.send_user) WHERE 1 = 1;
2025-07-11 15:28:23.907 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:28:23 | 耗时 0 ms | SQL 语句：
select message_info.id, message_info.send_user, message_info.content, message_info.create_date, message_info.read_status, user_info.name as userName, user_info.images as userImages from message_info left join user_info on (user_info.id = message_info.send_user) where 1 = 1 order by message_info.create_date desc LIMIT 0,10;
2025-07-11 15:28:25.076 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-11 15:28:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_offline_record dor LEFT JOIN device_info di ON (di.id = dor.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-11 15:28:25.077 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-11 15:28:25 | 耗时 0 ms | SQL 语句：
select dor.id, dor.device_id, dor.online_date, dor.offline, dor.type, di.code as deviceCode, di.name as deviceName, di.remark, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_offline_record dor left join device_info di on (di.id = dor.device_id) left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by dor.online_date desc LIMIT 0,10;
2025-07-11 15:28:26.500 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-11 15:28:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM operate_record_info ori LEFT JOIN device_info di ON (di.id = ori.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-11 15:28:26.502 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-11 15:28:26 | 耗时 1 ms | SQL 语句：
select ori.id, ori.device_id, ori.open_flag, ori.device_value, ori.device_old_value, ori.create_date, di.code as deviceCode, di.name as deviceName, di.remark, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from operate_record_info ori left join device_info di on (di.id = ori.device_id) left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by ori.create_date desc LIMIT 0,10;
2025-07-11 15:28:27.384 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-11 15:28:27.384 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-11 15:28:27.386 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-11 15:28:27.387 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-11 15:28:27.388 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-11 15:28:27.388 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:28:27.389 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-11 15:28:27.389 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:28:27.390 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-11 15:28:27.390 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-11 15:28:27.391 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-11 15:28:27.391 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-11 15:28:27.392 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-11 15:28:27.393 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-11 15:28:27.394 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-11 15:28:27.395 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-11 15:28:27.397 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:28:27 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-11 15:28:30.624 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:28:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-11 15:28:30.625 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:28:30 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,500;
2025-07-11 15:28:32.256 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-11 15:28:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-11 15:28:32.257 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-11 15:28:32 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,36;
2025-07-11 15:29:13.401 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-11 15:29:13.403 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-11 15:29:13.404 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-11 15:29:13.407 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-11 15:29:13.407 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-11 15:29:13.408 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:29:13.408 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-11 15:29:13.409 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:29:13.409 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-11 15:29:13.411 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-11 15:29:13.411 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-11 15:29:13.412 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-11 15:29:13.412 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-11 15:29:13.413 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-11 15:29:13.415 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-11 15:29:13.417 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-11 15:29:13.419 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:29:13 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-11 15:29:38.331 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:29:38 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-11 15:29:38.333 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-11 15:29:38 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM device_alert_info LEFT JOIN device_info ON (device_info.id = device_alert_info.device_id) LEFT JOIN device_type ON (device_type.id = device_info.type_id) LEFT JOIN user_info ON (user_info.id = device_info.user_id) WHERE 1 = 1;
2025-07-11 15:29:38.336 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-11 15:29:38 | 耗时 1 ms | SQL 语句：
select device_alert_info.id, device_alert_info.device_id, device_alert_info.device_type_id, device_alert_info.`type`, device_alert_info.score, device_alert_info.create_date, device_alert_info.remark, device_info.code as deviceCode, device_info.name as deviceName, device_info.remark, device_type.name as typeName, device_type.images, user_info.name as userName, user_info.images as userImages from device_alert_info left join device_info on (device_info.id = device_alert_info.device_id) left join device_type on (device_type.id = device_info.type_id) left join user_info on (user_info.id = device_info.user_id) where 1 = 1 order by device_alert_info.create_date desc LIMIT 0,10;
2025-07-11 15:29:40.210 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:29:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM bulletin_info bi WHERE 1 = 1;
2025-07-11 15:29:40.219 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:29:40 | 耗时 8 ms | SQL 语句：
SELECT bi.id, bi.title, bi.content, bi.images, bi.date AS createDate, bi.publisher, bi.rack_up AS rackUp, bi.type FROM bulletin_info bi WHERE 1 = 1 ORDER BY bi.date DESC LIMIT 0,10;
2025-07-11 15:29:40.892 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-11 15:29:40 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,remark,create_date,images FROM device_type;
2025-07-11 15:29:40.894 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:29:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-11 15:29:40.896 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:29:40 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,10;
2025-07-11 15:29:41.642 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-11 15:29:41 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_history_info dhi LEFT JOIN device_info di ON (di.id = dhi.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-11 15:29:41.644 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-11 15:29:41 | 耗时 1 ms | SQL 语句：
select dhi.id, dhi.device_id, dhi.device_value, dhi.alert_value, dhi.create_date, di.code as deviceCode, di.name as deviceName, di.remark, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_history_info dhi left join device_info di on (di.id = dhi.device_id) left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by dhi.create_date desc LIMIT 0,10;
2025-07-11 15:29:42.823 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:29:42 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM message_info LEFT JOIN user_info ON (user_info.id = message_info.send_user) WHERE 1 = 1;
2025-07-11 15:29:42.824 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:29:42 | 耗时 0 ms | SQL 语句：
select message_info.id, message_info.send_user, message_info.content, message_info.create_date, message_info.read_status, user_info.name as userName, user_info.images as userImages from message_info left join user_info on (user_info.id = message_info.send_user) where 1 = 1 order by message_info.create_date desc LIMIT 0,10;
2025-07-11 15:29:43.568 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:29:43 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_offline_record dor LEFT JOIN device_info di ON (di.id = dor.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-11 15:29:43.570 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:29:43 | 耗时 0 ms | SQL 语句：
select dor.id, dor.device_id, dor.online_date, dor.offline, dor.type, di.code as deviceCode, di.name as deviceName, di.remark, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_offline_record dor left join device_info di on (di.id = dor.device_id) left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by dor.online_date desc LIMIT 0,10;
2025-07-11 15:29:44.472 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-11 15:29:44 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM operate_record_info ori LEFT JOIN device_info di ON (di.id = ori.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-11 15:29:44.474 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-11 15:29:44 | 耗时 0 ms | SQL 语句：
select ori.id, ori.device_id, ori.open_flag, ori.device_value, ori.device_old_value, ori.create_date, di.code as deviceCode, di.name as deviceName, di.remark, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from operate_record_info ori left join device_info di on (di.id = ori.device_id) left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by ori.create_date desc LIMIT 0,10;
2025-07-11 15:29:45.470 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:29:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM device_type WHERE 1 = 1;
2025-07-11 15:29:45.470 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:29:45 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, create_date, images from device_type where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-11 15:29:47.843 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:29:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM user_info WHERE 1 = 1;
2025-07-11 15:29:47.844 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:29:47 | 耗时 0 ms | SQL 语句：
select id, code, name, remark, images, create_date, user_id from user_info where 1 = 1 order by create_date desc LIMIT 0,10;
2025-07-11 15:29:56.000 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-11 15:29:56 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-11 15:29:56.002 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-11 15:29:56 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,500;
2025-07-11 15:29:57.586 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:29:57 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1;
2025-07-11 15:29:57.587 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:29:57 | 耗时 0 ms | SQL 语句：
select di.id, di.code, di.name, di.type_id, di.online_flag, di.last_open_date, di.create_date, di.open_flag, di.device_value, di.remark, di.address, dt.name as typeName, dt.images, ui.name as userName, ui.images as userImages from device_info di left join device_type dt on (dt.id = di.type_id) left join user_info ui on (ui.id = di.user_id) where 1 = 1 order by di.create_date desc LIMIT 0,36;
2025-07-11 15:30:50.289 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:30:50 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-11 15:30:50.291 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:30:50 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-11 15:31:40.293 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:31:40 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-11 15:31:40.295 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:31:40 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-11 15:31:47.598 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-11 15:31:47.598 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-11 15:31:47.600 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-11 15:31:47.601 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-11 15:31:47.602 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-11 15:31:47.602 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:31:47.604 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:31:47.604 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-11 15:31:47.605 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-11 15:31:47.605 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-11 15:31:47.606 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-11 15:31:47.606 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-11 15:31:47.608 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-11 15:31:47.609 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-11 15:31:47.611 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-11 15:31:47.612 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-11 15:31:47.613 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:31:47 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-11 15:32:07.491 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:32:07 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = '1111';
2025-07-11 15:32:08.730 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:32:08 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = '1111';
2025-07-11 15:32:18.133 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-11 15:32:18 | 耗时 9 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = '1111';
2025-07-11 15:32:26.683 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:32:26 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = '1111';
2025-07-11 15:32:26.709 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:32:26 | 耗时 13 ms | SQL 语句：
INSERT INTO t_user ( username, password, status, create_time, ssex, description, avatar ) VALUES ( '1111', '74793ceaef36185ee4bd40c23db2f118', '1', '2025-07-11T15:32:26.692+0800', '2', '注册用户', 'default.jpg' );
2025-07-11 15:32:26.716 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:32:26 | 耗时 5 ms | SQL 语句：
INSERT INTO user_info ( code, name, create_date, user_id ) VALUES ( 'UR-1752219146709', '1111', '2025-07-11 15:32:26', 15 );
2025-07-11 15:32:26.721 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:32:26 | 耗时 3 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 15, 75 );
2025-07-11 15:32:26.725 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:32:26 | 耗时 0 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 15, 'light', 'side', '0', '1', '1', 'rgb(66, 185, 131)' );
2025-07-11 15:32:26.730 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:32:26 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '1111' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-11 15:32:26.731 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:32:26 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '1111';
2025-07-11 15:32:26.733 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:32:26 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '1111' and m.perms is not null and m.perms <> '';
2025-07-11 15:32:26.734 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:32:26 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2025-07-11 15:32:37.857 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-11 15:32:37.860 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:32:37 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2025-07-11T15:32:37.858+0800' WHERE username = '1111';
2025-07-11 15:32:37.862 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:32:37 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = '1111' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-11 15:32:37.869 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:32:37 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( '1111', '2025-07-11T15:32:37.867+0800', '', '127.0.0.1' );
2025-07-11 15:32:37.880 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:32:37 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '1111' and m.perms is not null and m.perms <> '';
2025-07-11 15:32:37.888 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-11 15:32:37.890 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:32:37 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '1111') order by m.order_num;
2025-07-11 15:32:37.971 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-11 15:32:37.973 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-11 15:32:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1 AND ui.user_id = 15;
2025-07-11 15:32:37.973 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:32:37 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-11 15:32:37.975 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:32:37 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:32:37.976 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:32:37 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:32:37.978 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:32:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-11 15:32:37.980 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:32:37 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '1111' group by days;
2025-07-11 15:32:45.598 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:32:45 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,remark,images,create_date,user_id FROM user_info WHERE user_id = 15;
2025-07-11 15:32:45.601 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:32:45 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE user_id = 2;
2025-07-11 15:32:46.837 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-11 15:32:46.838 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:32:46 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1 AND ui.user_id = 15;
2025-07-11 15:32:46.848 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:32:46 | 耗时 9 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-11 15:32:46.850 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:32:46 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:32:46.851 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:32:46 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:32:46.851 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:32:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-11 15:32:46.853 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:32:46 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '1111' group by days;
2025-07-11 15:32:50.549 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-11 15:32:50 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,remark,images,create_date,user_id FROM user_info WHERE user_id = 15;
2025-07-11 15:32:50.551 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-11 15:32:50 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE user_id = 2;
2025-07-11 15:32:51.584 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:32:51 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,remark,create_date,images FROM device_type;
2025-07-11 15:32:51.586 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:32:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1 AND ui.user_id = 15;
2025-07-11 15:32:52.677 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:32:52 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,remark,images,create_date,user_id FROM user_info WHERE user_id = 15;
2025-07-11 15:32:52.679 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:32:52 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE user_id = 2;
2025-07-11 15:32:53.289 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-11 15:32:53 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,remark,create_date,images FROM device_type;
2025-07-11 15:32:53.290 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:32:53 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1 AND ui.user_id = 15;
2025-07-11 15:32:54.203 febs [http-nio-9527-exec-6] INFO  p6spy - 2025-07-11 15:32:54 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-11 15:32:54.204 febs [http-nio-9527-exec-4] INFO  p6spy - 2025-07-11 15:32:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_alert_info LEFT JOIN device_info ON (device_info.id = device_alert_info.device_id) LEFT JOIN device_type ON (device_type.id = device_info.type_id) LEFT JOIN user_info ON (user_info.id = device_info.user_id) WHERE 1 = 1 AND user_info.user_id = 15;
2025-07-11 15:32:55.016 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:32:55 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_history_info dhi LEFT JOIN device_info di ON (di.id = dhi.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1 AND ui.user_id = 15;
2025-07-11 15:32:56.312 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:32:56 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM message_info LEFT JOIN user_info ON (user_info.id = message_info.send_user) WHERE 1 = 1 AND user_info.user_id = 15;
2025-07-11 15:32:57.098 febs [http-nio-9527-exec-5] INFO  p6spy - 2025-07-11 15:32:57 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_offline_record dor LEFT JOIN device_info di ON (di.id = dor.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1 AND ui.user_id = '15';
2025-07-11 15:32:58.378 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:32:58 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM operate_record_info ori LEFT JOIN device_info di ON (di.id = ori.device_id) LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1 AND ui.user_id = '15';
2025-07-11 15:32:59.280 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:32:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,remark,create_date,images FROM device_type;
2025-07-11 15:32:59.282 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:32:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,remark,images,create_date,user_id FROM user_info WHERE user_id = 15;
2025-07-11 15:32:59.285 febs [http-nio-9527-exec-2] INFO  p6spy - 2025-07-11 15:32:59 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE user_id = 2;
2025-07-11 15:32:59.299 febs [http-nio-9527-exec-10] INFO  p6spy - 2025-07-11 15:32:59 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT ei.id, ei.CODE, ei.NAME, ei.user_id, ei.content, ei.create_date, ui.NAME AS userName, ui.images AS userImages, count(ed.id) FROM event_info ei LEFT JOIN user_info ui ON (ui.id = ei.user_id) LEFT JOIN event_detail ed ON (ed.event_id = ei.id) WHERE 1 = 1 GROUP BY ed.event_id ORDER BY ei.create_date DESC ) TOTAL;
2025-07-11 15:33:23.751 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-11 15:33:23.752 febs [http-nio-9527-exec-1] INFO  p6spy - 2025-07-11 15:33:23 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM device_info di LEFT JOIN device_type dt ON (dt.id = di.type_id) LEFT JOIN user_info ui ON (ui.id = di.user_id) WHERE 1 = 1 AND ui.user_id = 15;
2025-07-11 15:33:23.754 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-11 15:33:23 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-11 15:33:23.755 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-11 15:33:23 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:33:23.756 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-11 15:33:23 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:33:23.757 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-11 15:33:23 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-11 15:33:23.759 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-11 15:33:23 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = '1111' group by days;
2025-07-11 15:35:50.292 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:35:50 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-11 15:35:50.295 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:35:50 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-11 15:37:30.295 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:37:30 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-11 15:37:30.296 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:37:30 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-11 15:40:50.285 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:40:50 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info;
2025-07-11 15:40:50.287 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:40:50 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '2';
2025-07-11 15:41:07.403 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-11 15:41:38.304 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2025-07-11 15:41:38.308 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET last_login_time='2025-07-11T15:41:38.305+0800' WHERE username = 'admin';
2025-07-11 15:41:38.310 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2025-07-11 15:41:38.317 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2025-07-11T15:41:38.315+0800', '', '127.0.0.1' );
2025-07-11 15:41:38.324 febs [http-nio-9527-exec-7] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2025-07-11 15:41:38.331 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-11 15:41:38.333 febs [http-nio-9527-exec-8] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2025-07-11 15:41:38.457 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM user_info;
2025-07-11 15:41:38.457 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2025-07-11 15:41:38.458 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_info;
2025-07-11 15:41:38.459 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2025-07-11 15:41:38.460 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM device_history_info;
2025-07-11 15:41:38.460 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:41:38.461 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2025-07-11 15:41:38.461 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM message_info;
2025-07-11 15:41:38.462 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( device_history_info.create_date, '%m' ) = 7;
2025-07-11 15:41:38.462 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2025-07-11 15:41:38.464 febs [http-nio-9527-exec-3] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2025-07-11 15:41:38.464 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025 AND DATE_FORMAT( message_info.create_date, '%m' ) = 7;
2025-07-11 15:41:38.465 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
select count(1) from device_history_info where 1 = 1 AND DATE_FORMAT( device_history_info.create_date, '%Y' ) = 2025;
2025-07-11 15:41:38.466 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
select count(1) from message_info where 1 = 1 AND DATE_FORMAT( message_info.create_date, '%Y' ) = 2025;
2025-07-11 15:41:38.468 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN device_history_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-11 15:41:38.470 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(COUNT(oi.id), 0) AS count FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo LEFT JOIN message_info oi ON ( DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' ) ) GROUP BY days ORDER BY days ASC;
2025-07-11 15:41:38.472 febs [http-nio-9527-exec-9] INFO  p6spy - 2025-07-11 15:41:38 | 耗时 0 ms | SQL 语句：
SELECT id,title,content,date,rack_up,type,publisher FROM bulletin_info WHERE rack_up = 1;
2025-07-11 15:43:20.290 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:43:20 | 耗时 0 ms | SQL 语句：
SELECT id,code,name,type_id,online_flag,create_date,open_flag,device_value,alert_value,value_type,remark,user_id,last_open_date,address FROM device_info WHERE open_flag = '1';
2025-07-11 15:43:20.292 febs [scheduling-1] INFO  p6spy - 2025-07-11 15:43:20 | 耗时 0 ms | SQL 语句：
SELECT id,device_id,device_type_id,type,score,create_date,remark FROM device_alert_info WHERE type = '1';
2025-07-11 15:44:37.922 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-11 15:44:40.836 febs [Thread-19] INFO  o.s.i.m.i.MqttPahoMessageDrivenChannelAdapter - stopped toiletMqttInbound
2025-07-11 15:44:40.836 febs [Thread-19] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2025-07-11 15:44:40.836 febs [Thread-19] INFO  o.s.i.c.PublishSubscribeChannel - Channel 'application.errorChannel' has 0 subscriber(s).
2025-07-11 15:44:40.836 febs [Thread-19] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped _org.springframework.integration.errorLogger
2025-07-11 15:44:40.837 febs [Thread-19] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.InboundMessageHandler.serviceActivator} as a subscriber to the 'toiletMqttInboundChannel' channel
2025-07-11 15:44:40.837 febs [Thread-19] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttInboundChannel' has 0 subscriber(s).
2025-07-11 15:44:40.837 febs [Thread-19] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.InboundMessageHandler.serviceActivator
2025-07-11 15:44:40.837 febs [Thread-19] INFO  o.s.i.endpoint.EventDrivenConsumer - Removing {message-handler:deviceMqttConfig.mqttOutbound.serviceActivator} as a subscriber to the 'toiletMqttOutboundChannel' channel
2025-07-11 15:44:40.837 febs [Thread-19] INFO  o.s.i.channel.DirectChannel - Channel 'application.toiletMqttOutboundChannel' has 0 subscriber(s).
2025-07-11 15:44:40.837 febs [Thread-19] INFO  o.s.i.endpoint.EventDrivenConsumer - stopped deviceMqttConfig.mqttOutbound.serviceActivator
2025-07-11 15:44:40.838 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2025-07-11 15:44:40.838 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2025-07-11 15:44:40.838 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-07-11 15:44:40.838 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-07-11 15:44:40.838 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-07-11 15:44:40.845 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2025-07-11 15:44:40.847 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2025-07-11 15:44:40.847 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2025-07-11 15:44:40.851 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
